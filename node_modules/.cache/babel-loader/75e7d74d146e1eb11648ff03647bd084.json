{"ast":null,"code":"var _jsxFileName = \"/Users/blues/CodersLab/Projects/BoozeCounter/src/AddRecipe.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AddRecipe = _ref => {\n  let {\n    closeNewModal,\n    recipeBar,\n    cancelButton,\n    setName,\n    ingredients,\n    updateIngredientName,\n    updateIngredientValue,\n    handleAddIng,\n    setProcess\n  } = _ref;\n  if (recipeBar === false) return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"add--recipe\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"recipe--form\",\n        onSubmit: closeNewModal,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"add--recipe--name\",\n          placeholder: 'Drink Name',\n          onChange: e => setName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 17\n        }, this), ingredients.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: 'add--ing',\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"\",\n            placeholder: `ingredient ${index + 1}`,\n            onChange: e => updateIngredientName(index, e.target.value),\n            value: ingredients[index].name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: 'number',\n            className: \"\",\n            placeholder: \"quantity\",\n            onChange: e => updateIngredientValue(index, e.target.value),\n            value: ingredients[index].quantity\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 25\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 21\n        }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"add--btn\",\n          onClick: handleAddIng,\n          children: \"add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"add--process\",\n          placeholder: \"Type Process\",\n          onChange: e => setProcess(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"save--btn\",\n          type: \"submit\",\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"\",\n          onClick: cancelButton,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);else return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n\n_c = AddRecipe;\nexport { AddRecipe };\n\nvar _c;\n\n$RefreshReg$(_c, \"AddRecipe\");","map":{"version":3,"sources":["/Users/blues/CodersLab/Projects/BoozeCounter/src/AddRecipe.js"],"names":["React","AddRecipe","closeNewModal","recipeBar","cancelButton","setName","ingredients","updateIngredientName","updateIngredientValue","handleAddIng","setProcess","e","target","value","map","item","index","name","quantity"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAGA,MAAMC,SAAS,GAAE,QAKgC;AAAA,MAL/B;AAACC,IAAAA,aAAD;AAAgBC,IAAAA,SAAhB;AACIC,IAAAA,YADJ;AAEIC,IAAAA,OAFJ;AAEYC,IAAAA,WAFZ;AAGIC,IAAAA,oBAHJ;AAIIC,IAAAA,qBAJJ;AAKIC,IAAAA,YALJ;AAKiBC,IAAAA;AALjB,GAK+B;AAC7C,MAAIP,SAAS,KAAK,KAAlB,EACA,oBACI;AAAA,2BACA;AAAS,MAAA,SAAS,EAAE,aAApB;AAAA,6BACI;AAAM,QAAA,SAAS,EAAE,cAAjB;AAAiC,QAAA,QAAQ,EAAED,aAA3C;AAAA,gCACI;AAAO,UAAA,SAAS,EAAE,mBAAlB;AAAuC,UAAA,WAAW,EAAE,YAApD;AAAkE,UAAA,QAAQ,EAAES,CAAC,IAAIN,OAAO,CAACM,CAAC,CAACC,MAAF,CAASC,KAAV;AAAxF;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEKP,WAAW,CAACQ,GAAZ,CAAgB,CAACC,IAAD,EAAMC,KAAN,kBACb;AAAiB,UAAA,SAAS,EAAE,UAA5B;AAAA,kCACI;AAAQ,YAAA,SAAS,EAAE,EAAnB;AACQ,YAAA,WAAW,EAAG,cAAaA,KAAK,GAAC,CAAE,EAD3C;AAEQ,YAAA,QAAQ,EAAEL,CAAC,IAAIJ,oBAAoB,CAACS,KAAD,EAAOL,CAAC,CAACC,MAAF,CAASC,KAAhB,CAF3C;AAGQ,YAAA,KAAK,EAAEP,WAAW,CAACU,KAAD,CAAX,CAAmBC;AAHlC;AAAA;AAAA;AAAA;AAAA,kBADJ,eAMI;AAAO,YAAA,IAAI,EAAE,QAAb;AAAuB,YAAA,SAAS,EAAE,EAAlC;AACO,YAAA,WAAW,EAAE,UADpB;AAEO,YAAA,QAAQ,EAAEN,CAAC,IAAIH,qBAAqB,CAACQ,KAAD,EAAOL,CAAC,CAACC,MAAF,CAASC,KAAhB,CAF3C;AAGO,YAAA,KAAK,EAAEP,WAAW,CAACU,KAAD,CAAX,CAAmBE;AAHjC;AAAA;AAAA;AAAA;AAAA,kBANJ;AAAA,WAAUF,KAAV;AAAA;AAAA;AAAA;AAAA,gBADH,CAFL,eAgBI;AAAQ,UAAA,SAAS,EAAE,UAAnB;AAA+B,UAAA,OAAO,EAAEP,YAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAhBJ,eAiBI;AAAU,UAAA,SAAS,EAAE,cAArB;AAAqC,UAAA,WAAW,EAAE,cAAlD;AAAkE,UAAA,QAAQ,EAAEE,CAAC,IAAID,UAAU,CAACC,CAAC,CAACC,MAAF,CAASC,KAAV;AAA3F;AAAA;AAAA;AAAA;AAAA,gBAjBJ,eAkBI;AAAQ,UAAA,SAAS,EAAE,WAAnB;AAAgC,UAAA,IAAI,EAAE,QAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAlBJ,eAmBI;AAAQ,UAAA,SAAS,EAAE,EAAnB;AAAuB,UAAA,OAAO,EAAET,YAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAnBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADA,mBADJ,CADA,KA6BK,oBAAO,qCAAP;AACR,CApCD;;KAAMH,S;AAsCN,SAAQA,SAAR","sourcesContent":["import React from \"react\";\n\n\nconst AddRecipe =({closeNewModal, recipeBar,\n                      cancelButton,\n                      setName,ingredients,\n                      updateIngredientName,\n                      updateIngredientValue,\n                      handleAddIng,setProcess})=>{\n    if (recipeBar === false)\n    return(\n        <>\n        <section className={\"add--recipe\"}>\n            <form className={\"recipe--form\"} onSubmit={closeNewModal}>\n                <input className={\"add--recipe--name\"} placeholder={'Drink Name'} onChange={e => setName(e.target.value)}/>\n                {ingredients.map((item,index)=>(\n                    <div key={index} className={'add--ing'}>\n                        <input  className={\"\"}\n                                placeholder={`ingredient ${index+1}`}\n                                onChange={e => updateIngredientName(index,e.target.value)}\n                                value={ingredients[index].name}\n                        />\n                        <input type={'number'} className={\"\"}\n                               placeholder={\"quantity\"}\n                               onChange={e => updateIngredientValue(index,e.target.value)}\n                               value={ingredients[index].quantity}\n                        />\n                    </div>\n                ))}\n                <button className={\"add--btn\"} onClick={handleAddIng}>add</button>\n                <textarea className={\"add--process\"} placeholder={\"Type Process\"} onChange={e => setProcess(e.target.value)}/>\n                <button className={\"save--btn\"} type={\"submit\"}>Save</button>\n                <button className={\"\"} onClick={cancelButton}>Cancel</button>\n\n            </form>\n        </section>\n        </>\n    )\n    else return <></>\n};\n\nexport {AddRecipe};"]},"metadata":{},"sourceType":"module"}