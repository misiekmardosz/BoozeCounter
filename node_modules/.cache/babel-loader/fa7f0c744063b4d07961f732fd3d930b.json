{"ast":null,"code":"var _jsxFileName = \"/Users/blues/CodersLab/Projects/BoozeCounter/src/Recipe.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Modal from 'react-modal';\nimport { RecipeDetails } from \"./RecipeDetails\";\nimport { Ingredient } from \"./models/ingredient\";\nimport { Recipe as RecipeModel } from \"./models/Recipe\";\nimport { GlassDetails } from \"./GlassDetails\"; //uuid\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Recipe = () => {\n  _s();\n\n  const [recipes, setRecipes] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [openedRecipe, setOpenedRecipe] = useState(null);\n  const [name, setName] = useState(\"\");\n  const [process, setProcess] = useState(\"\");\n  const [ingredients, setIngredients] = useState([new Ingredient(\"\", null)]);\n  const [ingredientsValue, setIngredientsValue] = useState([]);\n  const [newRecipeModalIsOpen, setNewRecipeModalIsOpen] = React.useState(false);\n  const [recipeModalIsOpen, setRecipeModalIsOpen] = React.useState(false);\n  const [glassModalIsOpen, setGlassModalIsOpen] = React.useState(false);\n  useEffect(() => {\n    setLoading(true);\n    fetch(`${API_URL}/recipes`).then(response => response.json()).then(data => {\n      setRecipes(data);\n      setLoading(false);\n    });\n  }, []);\n\n  const deleteRecipe = id => {\n    setLoading(true);\n    fetch(`${API_URL}/recipes/${id}`, {\n      method: 'DELETE'\n    }).then(response => response.json()).then(() => {\n      setRecipes(prevState => prevState.filter(recipe => recipe.id !== id));\n      setLoading(false);\n    });\n  };\n\n  const recipe = ingredientsValue.reduce(function (recipe, field, index) {\n    recipe[ingredients[index]] = field;\n    return recipe;\n  }, {}); // const addNewRecipe = (recipe) => {\n\n  const addNewRecipe = () => {\n    // TODO :: to remove after moving fomr to seperate compoenent\n    const recipe = new RecipeModel(name, ingredients, process);\n    fetch(`${API_URL}/recipes`, {\n      method: 'POST',\n      body: JSON.stringify(recipe),\n      headers: {\n        'Content-type': 'application/json'\n      }\n    }).then(resp => resp.json()).then(newRecipe => {\n      console.log(newRecipe);\n      recipe.setId(newRecipe.id);\n      setRecipes(prevState => [...prevState, recipe]);\n    });\n  };\n\n  const handleClickIng = e => {\n    e.preventDefault();\n    const ingredient = new Ingredient(\"\", null);\n    setIngredients(prevState => [...prevState, ingredient]);\n  };\n\n  function openNewModal() {\n    setNewRecipeModalIsOpen(true);\n  }\n\n  function closeNewModal(e) {\n    e.preventDefault();\n    addNewRecipe();\n    setNewRecipeModalIsOpen(false);\n  }\n\n  function openModal(recipe) {\n    setOpenedRecipe(recipe);\n    setRecipeModalIsOpen(true);\n  }\n\n  function closeModal(close) {\n    setRecipeModalIsOpen(false);\n  }\n\n  function openGlassModal(glassOpen) {\n    setGlassModalIsOpen(true);\n  }\n\n  function closeGlassModal(glassClose) {\n    setGlassModalIsOpen(false);\n  }\n\n  const updateIngredientName = (index, newName) => {\n    const updatedIngredients = [...ingredients];\n    updatedIngredients[index].name = newName;\n    setIngredients(updatedIngredients);\n  };\n\n  const updateIngredientValue = (index, newQuantity) => {\n    const updatedIngredients = [...ingredients];\n    updatedIngredients[index].quantity = newQuantity;\n    setIngredients(updatedIngredients);\n  }; // console.log(ingredients);\n\n\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Trwa \\u0142adowanie...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 25\n  }, this);\n  if (recipe.length === 0) return null;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"recipe\",\n        onClick: openNewModal,\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Add New\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"recipe\",\n        onClick: openGlassModal,\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Add New Glass\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this), recipes.map(recipe => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"recipe\",\n        onClick: () => openModal(recipe),\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: recipe.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 25\n        }, this)\n      }, recipe.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 21\n      }, this)), /*#__PURE__*/_jsxDEV(Modal, {\n        isOpen: recipeModalIsOpen,\n        onRequestClose: closeModal,\n        ariaHideApp: false,\n        children: /*#__PURE__*/_jsxDEV(RecipeDetails, {\n          recipe: openedRecipe,\n          open: recipeModalIsOpen,\n          close: closeModal,\n          deleteRecipe: deleteRecipe\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        isOpen: glassModalIsOpen,\n        onRequestClose: closeGlassModal,\n        children: /*#__PURE__*/_jsxDEV(GlassDetails, {\n          glass: glassModalIsOpen,\n          openGlass: closeGlassModal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        isOpen: newRecipeModalIsOpen,\n        onRequestClose: closeNewModal,\n        ariaHideApp: false,\n        children: /*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"container\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            className: \"form\",\n            onSubmit: closeNewModal,\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"new-recipe-title\",\n              placeholder: 'Drink Name',\n              onChange: e => setName(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 29\n            }, this), ingredients.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: 'new-ing-div',\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"new-recipe-title\",\n                placeholder: `ingredient ${index + 1}`,\n                onChange: e => updateIngredientName(index, e.target.value),\n                value: ingredients[index].name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: 'number',\n                className: \"new-recipe-title\",\n                placeholder: \"quantity\",\n                onChange: e => updateIngredientValue(index, e.target.value),\n                value: ingredients[index].quantity\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 37\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 33\n            }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"button\",\n              onClick: handleClickIng,\n              children: \"Add ingredient\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              className: \"new-recipe-title\",\n              onChange: e => setProcess(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"button\",\n              type: \"submit\",\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(Recipe, \"6oQ6+WoD1a4UOD+Uk4WGMijSaZY=\");\n\n_c = Recipe;\nexport { Recipe }; // check on click for recipe to prevent refreshiing\n\nvar _c;\n\n$RefreshReg$(_c, \"Recipe\");","map":{"version":3,"sources":["/Users/blues/CodersLab/Projects/BoozeCounter/src/Recipe.js"],"names":["React","useEffect","useState","Modal","RecipeDetails","Ingredient","Recipe","RecipeModel","GlassDetails","recipes","setRecipes","loading","setLoading","openedRecipe","setOpenedRecipe","name","setName","process","setProcess","ingredients","setIngredients","ingredientsValue","setIngredientsValue","newRecipeModalIsOpen","setNewRecipeModalIsOpen","recipeModalIsOpen","setRecipeModalIsOpen","glassModalIsOpen","setGlassModalIsOpen","fetch","API_URL","then","response","json","data","deleteRecipe","id","method","prevState","filter","recipe","reduce","field","index","addNewRecipe","body","JSON","stringify","headers","resp","newRecipe","console","log","setId","handleClickIng","e","preventDefault","ingredient","openNewModal","closeNewModal","openModal","closeModal","close","openGlassModal","glassOpen","closeGlassModal","glassClose","updateIngredientName","newName","updatedIngredients","updateIngredientValue","newQuantity","quantity","length","map","target","value","item"],"mappings":"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","sourcesContent":["import React, {useEffect, useState,} from 'react';\nimport Modal from 'react-modal';\nimport {RecipeDetails} from \"./RecipeDetails\";\nimport {Ingredient} from \"./models/ingredient\";\nimport {Recipe as RecipeModel} from \"./models/Recipe\"\nimport {GlassDetails} from \"./GlassDetails\";\n//uuid\n\n\nconst Recipe = () => {\n    const [recipes, setRecipes] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [openedRecipe, setOpenedRecipe] = useState(null);\n    const [name, setName] = useState(\"\");\n    const [process, setProcess] = useState(\"\");\n    const [ingredients, setIngredients] = useState([new Ingredient(\"\",null)]);\n    const [ingredientsValue, setIngredientsValue] = useState([]);\n    const [newRecipeModalIsOpen, setNewRecipeModalIsOpen] = React.useState(false);\n    const [recipeModalIsOpen, setRecipeModalIsOpen] = React.useState(false);\n    const [glassModalIsOpen, setGlassModalIsOpen] = React.useState(false);\n\n    useEffect(() => {\n        setLoading(true);\n        fetch(`${API_URL}/recipes`)\n            .then((response) => response.json())\n            .then((data) => {\n                setRecipes(data);\n                setLoading(false);\n            });\n    }, []);\n\n    const deleteRecipe = (id) => {\n        setLoading(true);\n        fetch(`${API_URL}/recipes/${id}`, { method: 'DELETE' })\n            .then((response) => response.json())\n            .then(() => {\n                setRecipes((prevState) => prevState.filter((recipe) => recipe.id !== id));\n                setLoading(false);\n            });\n    };\n    const recipe =  ingredientsValue.reduce(function(recipe, field, index) {\n        recipe[ingredients[index]] = field;\n        return recipe;\n    }, {})\n    // const addNewRecipe = (recipe) => {\n     const addNewRecipe = () => {\n       // TODO :: to remove after moving fomr to seperate compoenent\n        const recipe = new RecipeModel( name, ingredients, process);\n        fetch(`${API_URL}/recipes`, {\n            method: 'POST',\n            body: JSON.stringify(recipe),\n            headers: {\n                'Content-type': 'application/json',\n            },\n        })\n            .then((resp) => resp.json())\n            .then((newRecipe) => {\n                console.log(newRecipe);\n                recipe.setId(newRecipe.id)\n                setRecipes((prevState) => [...prevState, recipe]);\n            });\n    };\n    const handleClickIng = (e) => {\n        e.preventDefault()\n        const ingredient = new Ingredient(\"\", null);\n        setIngredients( prevState => [...prevState, ingredient]);\n    }\n    function openNewModal() {\n        setNewRecipeModalIsOpen(true);\n    }\n\n    function closeNewModal(e) {\n        e.preventDefault()\n        addNewRecipe();\n        setNewRecipeModalIsOpen(false);\n    }\n    function openModal(recipe) {\n        setOpenedRecipe(recipe);\n        setRecipeModalIsOpen(true);\n    }\n    function closeModal(close) {\n        setRecipeModalIsOpen(false);\n    }\n    function openGlassModal(glassOpen){\n        setGlassModalIsOpen(true)\n    }\n    function closeGlassModal(glassClose){\n        setGlassModalIsOpen(false)\n    }\n    const updateIngredientName = (index, newName) => {\n        const updatedIngredients = [...ingredients];\n        updatedIngredients[index].name=newName;\n        setIngredients(updatedIngredients)\n    }\n    const updateIngredientValue = (index, newQuantity) =>{\n        const updatedIngredients = [...ingredients];\n        updatedIngredients[index].quantity= newQuantity;\n        setIngredients(updatedIngredients);\n    }\n\n    // console.log(ingredients);\n\n    if (loading) return <p>Trwa ładowanie...</p>;\n    if (recipe.length === 0) return null;\n    return (\n        <>\n            <section className={\"container\"}>\n                <div className={\"recipe\"} onClick={openNewModal}>\n                    <h1>Add New</h1>\n                </div>\n                <div className={\"recipe\"} onClick={openGlassModal}>\n                    <h1>Add New Glass</h1>\n                </div>\n                {recipes.map((recipe) => (\n                    <div key={recipe.id} className={\"recipe\"} onClick={ () => openModal(recipe)}>\n                        <h2>{recipe.name}</h2>\n                    </div>\n                ))}\n                <Modal\n                    isOpen={recipeModalIsOpen}\n                    onRequestClose={closeModal}\n                    ariaHideApp={false}\n                >\n                    <RecipeDetails recipe={openedRecipe} open={recipeModalIsOpen} close={closeModal} deleteRecipe={deleteRecipe}/>\n                </Modal>\n                <Modal\n                    isOpen={glassModalIsOpen}\n                    onRequestClose={closeGlassModal}\n                >\n                    <GlassDetails glass={glassModalIsOpen} openGlass={closeGlassModal}/>\n                </Modal>\n                <Modal\n                    isOpen={newRecipeModalIsOpen}\n                    onRequestClose={closeNewModal}\n                    ariaHideApp={false}\n                >\n                    <section className={\"container\"}>\n                        <form className={\"form\"} onSubmit={closeNewModal}>\n                            <input className={\"new-recipe-title\"} placeholder={'Drink Name'} onChange={e => setName(e.target.value)}/>\n                            {ingredients.map((item,index)=>(\n                                <div key={index} className={'new-ing-div'}>\n                                    <input  className={\"new-recipe-title\"}\n                                            placeholder={`ingredient ${index+1}`}\n                                            onChange={e => updateIngredientName(index,e.target.value)}\n                                            value={ingredients[index].name}\n                                    />\n                                    <input type={'number'} className={\"new-recipe-title\"}\n                                           placeholder={\"quantity\"}\n                                           onChange={e => updateIngredientValue(index,e.target.value)}\n                                           value={ingredients[index].quantity}\n                                    />\n                                </div>\n                            ))}\n                            <button className={\"button\"} onClick={handleClickIng}>Add ingredient</button>\n                            <textarea className={\"new-recipe-title\"} onChange={e => setProcess(e.target.value)}/>\n                            <button className={\"button\"} type={\"submit\"}>Save</button>\n\n                        </form>\n                    </section>\n                </Modal>\n            </section>\n        </>\n    );\n}\n\nexport { Recipe };\n\n// check on click for recipe to prevent refreshiing"]},"metadata":{},"sourceType":"module"}