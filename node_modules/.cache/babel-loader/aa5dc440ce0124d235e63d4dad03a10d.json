{"ast":null,"code":"var _jsxFileName = \"/Users/blues/Dyplom/my-app/src/Recipe.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { RecipeForm } from \"./RecipeForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst divStyle = {\n  width: 200,\n  height: 200,\n  backgroundColor: \"red\"\n};\n\nconst Recipe = () => {\n  _s();\n\n  const [recipes, setRecipe] = useState([]);\n  const [activeNewRecipe, setActiveNewRecipe] = useState(false);\n  const [activeRecipe, setActiveRecipe] = useState(false);\n  const [name, setName] = useState(\"\");\n  const [ingName, setIngName] = useState(\"\");\n  const [ingreedients, setIngreedients] = useState([\"pierwszy\", \"drugi\"]);\n  console.log(activeRecipe);\n  console.log(activeNewRecipe); // function compare(a, b) {\n  //     if ( a.name < b.name){\n  //         return -1;\n  //     }}\n  // recipes.sort(compare)\n\n  const handleClick = e => {\n    e.preventDefault();\n    setActiveNewRecipe(prevState => !prevState);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setActiveNewRecipe(prevState => !prevState);\n    setRecipe(prevState => [...prevState, {\n      ingreedients\n    }]);\n  };\n\n  const handleClickIng = e => {\n    e.preventDefault();\n    setIngreedients(preState => [...preState, ingName]);\n  };\n\n  const handleClickRecipe = e => {\n    e.preventDefault();\n    setActiveRecipe(prevState => !prevState);\n  };\n\n  console.log(recipes);\n  console.log(ingreedients);\n  if (activeNewRecipe === true) return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: e => setName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }, this), ingreedients.map((item, index) => /*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: e => setIngName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 21\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"dodaj\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClickIng,\n      children: \"dodaj sk\\u0142adnik\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 13\n  }, this);else if (activeRecipe === true) return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleClickRecipe,\n    children: /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      placeholder: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 13\n  }, this);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: divStyle,\n      onClick: handleClick,\n      children: \"Dodaj Przepis!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), recipes.map((recipe, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: 200,\n        height: 200,\n        backgroundColor: \"red\"\n      },\n      onClick: handleClickRecipe,\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: recipe.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true);\n};\n\n_s(Recipe, \"VUc9Ps/f0ktpXWb2vDkMIjvl5Ss=\");\n\n_c = Recipe;\nexport { Recipe };\n\nvar _c;\n\n$RefreshReg$(_c, \"Recipe\");","map":{"version":3,"sources":["/Users/blues/Dyplom/my-app/src/Recipe.js"],"names":["React","useState","RecipeForm","divStyle","width","height","backgroundColor","Recipe","recipes","setRecipe","activeNewRecipe","setActiveNewRecipe","activeRecipe","setActiveRecipe","name","setName","ingName","setIngName","ingreedients","setIngreedients","console","log","handleClick","e","preventDefault","prevState","handleSubmit","handleClickIng","preState","handleClickRecipe","target","value","map","item","index","recipe"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport {RecipeForm} from \"./RecipeForm\";\n\nconst divStyle= {\n    width: 200,\n    height: 200,\n    backgroundColor: \"red\",\n}\nconst Recipe = () => {\n    const [recipes, setRecipe] = useState([]);\n    const [activeNewRecipe, setActiveNewRecipe] = useState(false);\n    const [activeRecipe, setActiveRecipe] = useState(false);\n    const [name, setName] = useState(\"\");\n    const [ingName, setIngName] = useState(\"\");\n    const [ingreedients, setIngreedients] = useState([\"pierwszy\",\"drugi\"]);\n    console.log(activeRecipe)\n    console.log(activeNewRecipe)\n    // function compare(a, b) {\n    //     if ( a.name < b.name){\n    //         return -1;\n    //     }}\n    // recipes.sort(compare)\n    const handleClick = (e) => {\n        e.preventDefault()\n        setActiveNewRecipe((prevState) => !prevState);\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        setActiveNewRecipe((prevState) => !prevState)\n        setRecipe((prevState)=>[...prevState,{ingreedients}])\n\n    };\n    const handleClickIng = (e) => {\n        e.preventDefault()\n        setIngreedients((preState)=>[...preState,ingName])\n    }\n    const handleClickRecipe = (e) => {\n        e.preventDefault()\n        setActiveRecipe((prevState) => !prevState);\n\n    }\n    console.log(recipes)\n    console.log(ingreedients)\n    if (activeNewRecipe === true)\n        return(\n            <form onSubmit={handleSubmit}>\n                <input onChange={e => setName(e.target.value)}/>\n                {ingreedients.map((item,index)=>(\n                    <input onChange={e => setIngName(e.target.value)}/>\n                ))}\n\n                <button type={\"submit\"}>dodaj</button>\n                <button onClick={handleClickIng}>dodaj sk≈Çadnik</button>\n\n            </form>\n        )\n    else if(activeRecipe === true)\n        return(\n            <form onSubmit={handleClickRecipe}>\n                <input type=\"number\" placeholder={name}/>\n            </form>\n        )\n\n    return (\n        <>\n            <div style={divStyle} onClick={handleClick}>Dodaj Przepis!</div>\n            {recipes.map((recipe, index) => (\n                <div key={index} style={{width: 200, height: 200, backgroundColor: \"red\",}} onClick={handleClickRecipe}>\n                    <h1>{recipe.name}</h1>\n                </div>\n            ))}\n        </>\n    );\n}\n\nexport { Recipe };"]},"metadata":{},"sourceType":"module"}