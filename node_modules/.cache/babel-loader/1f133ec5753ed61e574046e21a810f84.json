{"ast":null,"code":"var _jsxFileName = \"/Users/blues/Dyplom/my-app/src/Recipe.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Modal from 'react-modal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Recipe = _ref => {\n  _s();\n\n  let {\n    state\n  } = _ref;\n  const [recipes, setRecipe] = useState([]);\n  const [name, setName] = useState(\"\");\n  const [ingName, setIngName] = useState(\"\");\n  const [ingreedients, setIngreedients] = useState([]);\n  const recipe = ingreedients.reduce((o, key) => ({ ...o,\n    [key]: key\n  }), {});\n  const [newRecipeModalIsOpen, setNewRecipeModalIsOpen] = React.useState(false);\n  const [recipeModalIsOpen, setRecipeModalIsOpen] = React.useState(false);\n\n  function compare(a, b) {\n    if (a.name < b.name) {\n      return -1;\n    }\n  }\n\n  recipes.sort(compare);\n\n  const handleClickIng = e => {\n    e.preventDefault();\n    setIngreedients(preState => [...preState, ingName]);\n  };\n\n  function openNewModal() {\n    setNewRecipeModalIsOpen(true);\n  }\n\n  function closeNewModal() {\n    setNewRecipeModalIsOpen(false);\n    setRecipe(prevState => [...prevState, {\n      name,\n      recipe\n    }]);\n  }\n\n  function openModal() {\n    setRecipeModalIsOpen(true);\n  }\n\n  function closeModal() {\n    setRecipeModalIsOpen(false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"recipe\",\n        onClick: openNewModal,\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Dodaj Przepis!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), recipes.map((recipe, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"recipe\",\n          onClick: openModal,\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: recipe.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Modal, {\n          state: name,\n          isOpen: recipeModalIsOpen,\n          onRequestClose: closeModal,\n          ariaHideApp: false,\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            onClick: closeModal,\n            children: recipe.name\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 29\n          }, this)\n        }, recipe.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 25\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }, this)), /*#__PURE__*/_jsxDEV(Modal, {\n        isOpen: newRecipeModalIsOpen,\n        onRequestClose: closeNewModal,\n        ariaHideApp: false,\n        children: /*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"container\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            className: \"form\",\n            onSubmit: closeNewModal,\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"new-recipe-title\",\n              placeholder: 'Nazwa',\n              onChange: e => setName(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"new-recipe-title\",\n              placeholder: 'składnik 1',\n              onChange: e => setIngName(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 29\n            }, this), ingreedients.map((item, index) => /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"new-recipe-title\",\n              placeholder: `składnik ${index + 2}`,\n              onChange: e => setIngName(e.target.value)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 33\n            }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleClickIng,\n              children: \"dodaj sk\\u0142adnik\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              children: \"dodaj\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(Recipe, \"oETkJZ/WN7bAwbBALiOESBhmMas=\");\n\n_c = Recipe;\nexport { Recipe };\n\nvar _c;\n\n$RefreshReg$(_c, \"Recipe\");","map":{"version":3,"sources":["/Users/blues/Dyplom/my-app/src/Recipe.js"],"names":["React","useState","Modal","Recipe","state","recipes","setRecipe","name","setName","ingName","setIngName","ingreedients","setIngreedients","recipe","reduce","o","key","newRecipeModalIsOpen","setNewRecipeModalIsOpen","recipeModalIsOpen","setRecipeModalIsOpen","compare","a","b","sort","handleClickIng","e","preventDefault","preState","openNewModal","closeNewModal","prevState","openModal","closeModal","map","index","target","value","item"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport Modal from 'react-modal';\n\n\n\nconst Recipe = ({state}) => {\n    const [recipes, setRecipe] = useState([]);\n    const [name, setName] = useState(\"\");\n    const [ingName, setIngName] = useState(\"\");\n    const [ingreedients, setIngreedients] = useState([]);\n    const recipe = ingreedients.reduce((o, key) => ({ ...o, [key]: key}), {})\n    const [newRecipeModalIsOpen, setNewRecipeModalIsOpen] = React.useState(false);\n    const [recipeModalIsOpen, setRecipeModalIsOpen] = React.useState(false);\n    function compare(a, b) {\n        if ( a.name < b.name){\n            return -1;\n        }}\n    recipes.sort(compare)\n\n    const handleClickIng = (e) => {\n        e.preventDefault()\n        setIngreedients((preState)=>[...preState,ingName])\n    }\n    function openNewModal() {\n        setNewRecipeModalIsOpen(true);\n    }\n    function closeNewModal() {\n        setNewRecipeModalIsOpen(false);\n        setRecipe((prevState)=>[...prevState, {name, recipe}])\n    }\n    function openModal() {\n        setRecipeModalIsOpen(true);\n    }\n    function closeModal() {\n        setRecipeModalIsOpen(false);\n    }\n\n    return (\n        <>\n            {/*<header>*/}\n            {/*    <h1>BOOZE COUNTER</h1>*/}\n            {/*</header>*/}\n            <section className={\"container\"}>\n                <div className={\"recipe\"} onClick={openNewModal}>\n                    <h1>Dodaj Przepis!</h1>\n                </div>\n                {recipes.map((recipe, index) => (\n                    <div key={index}>\n                        <div className={\"recipe\"} onClick={openModal}>\n                            <h2>{recipe.name}</h2>\n                        </div>\n                        <Modal\n                            key={recipe.name}\n                            state={name}\n                            isOpen={recipeModalIsOpen}\n                            onRequestClose={closeModal}\n                            ariaHideApp={false}\n                        >\n                            <h1 key={index} onClick={closeModal}>{recipe.name}</h1>\n                        </Modal>\n                    </div>\n                ))}\n                <Modal\n                    isOpen={newRecipeModalIsOpen}\n                    onRequestClose={closeNewModal}\n                    ariaHideApp={false}\n                >\n                    <section className={\"container\"}>\n                        <form className={\"form\"} onSubmit={closeNewModal}>\n                            <input className={\"new-recipe-title\"} placeholder={'Nazwa'} onChange={e => setName(e.target.value)}/>\n                            <input className={\"new-recipe-title\"} placeholder={'składnik 1'} onChange={e => setIngName(e.target.value)}/>\n                            {ingreedients.map((item,index)=>(\n                                <input key={index} className={\"new-recipe-title\"} placeholder={`składnik ${index+2}`} onChange={e => setIngName(e.target.value)}/>\n                            ))}\n                            <button onClick={handleClickIng}>dodaj składnik</button>\n                            <button type={\"submit\"}>dodaj</button>\n\n                        </form>\n                    </section>\n                </Modal>\n            </section>\n        </>\n    );\n}\n\nexport { Recipe };"]},"metadata":{},"sourceType":"module"}