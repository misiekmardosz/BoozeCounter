{"ast":null,"code":"var _jsxFileName = \"/Users/blues/CodersLab/Projects/BoozeCounter/src/RecipeDetails.js\";\nimport React, { useState } from \"react\";\nimport { Ingredient } from \"./models/ingredient\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst RecipeDetails = _ref => {\n  let {\n    recipe,\n    close,\n    deleteRecipe,\n    glasses\n  } = _ref;\n  const sum = recipe.ingredients.reduce((total, amount) => total + parseInt(amount.quantity), 0);\n\n  const handleChange = e => {\n    setGlass(e.target.value);\n  };\n\n  const volume = glass.match(/\\d/g);\n  console.log(volume);\n  console.log(sum);\n\n  const handleDelete = () => {\n    deleteRecipe(recipe.id);\n    close();\n  }; // const updateSum = (newQuantity) =>{\n  //     newQuantity.map\n  // }\n\n\n  const drinksQuantity = newQuantity => {\n    const drinksQuantity = [newQuantity];\n    setNewQ(drinksQuantity);\n  };\n\n  console.log(newQ); // console.log(newQ)\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\" Prepare Your \", recipe.name, \"!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"How Many Drinks You want to do?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      onSubmit: close,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"set Value\",\n        onChange: e => drinksQuantity(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"What type of Glass You Have?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"button\",\n        value: glass,\n        onChange: handleChange,\n        children: glasses.map((glass, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          children: [glass.name, \" \", glass.volume, \".ml\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"You Need\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), recipe.ingredients.map((ingredient, index) => /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: [ingredient.name, \" \", ingredient.quantity * newQ / sum]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        onClick: handleDelete,\n        children: \"Delete Recipe\"\n      }, recipe.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)]\n    }, recipe.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: recipe.process\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_c = RecipeDetails;\nexport { RecipeDetails };\n\nvar _c;\n\n$RefreshReg$(_c, \"RecipeDetails\");","map":{"version":3,"sources":["/Users/blues/CodersLab/Projects/BoozeCounter/src/RecipeDetails.js"],"names":["React","useState","Ingredient","RecipeDetails","recipe","close","deleteRecipe","glasses","sum","ingredients","reduce","total","amount","parseInt","quantity","handleChange","e","setGlass","target","value","volume","glass","match","console","log","handleDelete","id","drinksQuantity","newQuantity","setNewQ","newQ","name","map","index","ingredient","process"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\nimport {Ingredient} from \"./models/ingredient\";\n\n\n\n\nconst RecipeDetails = ({recipe, close, deleteRecipe, glasses}) => {\n\n    const sum = recipe.ingredients.reduce((total, amount) =>\n        total + parseInt(amount.quantity), 0);\n    const handleChange =(e) => {\n        setGlass(e.target.value);\n    }\n    const volume = glass.match(/\\d/g);\n    console.log(volume)\n\n    console.log(sum)\n    const handleDelete =()=>{\n        deleteRecipe(recipe.id)\n        close()\n    }\n    // const updateSum = (newQuantity) =>{\n    //     newQuantity.map\n    // }\n    const drinksQuantity = (newQuantity) =>{\n        const drinksQuantity = [newQuantity];\n        setNewQ(drinksQuantity);\n    }\n    console.log(newQ)\n    // console.log(newQ)\n\n    return(\n        <>\n            <h2> Prepare Your {recipe.name}!</h2>\n            <h3>How Many Drinks You want to do?</h3>\n\n            <form key={recipe.id} className={\"form\"} onSubmit={close}>\n                <input type=\"number\" placeholder='set Value'onChange={e => drinksQuantity(e.target.value)}/>\n                <h3>What type of Glass You Have?</h3>\n                <select className={\"button\"} value={glass} onChange={handleChange}>\n                    {glasses.map((glass,index) => (\n                        <option>{glass.name} {glass.volume}.ml</option>\n                    ))}\n                </select>\n                <h4>You Need</h4>\n                {recipe.ingredients.map((ingredient,index) => (\n                    <h5>{ingredient.name} {ingredient.quantity*newQ/sum}</h5>\n                ))}\n                <button className={\"button\"} key={recipe.id} onClick={handleDelete}>Delete Recipe</button>\n            </form>\n            <p>{recipe.process}</p>\n        </>\n    )\n}\n\nexport {RecipeDetails}"]},"metadata":{},"sourceType":"module"}