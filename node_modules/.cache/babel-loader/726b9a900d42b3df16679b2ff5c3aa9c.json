{"ast":null,"code":"var _jsxFileName = \"/Users/blues/Dyplom/my-app/src/Recipe.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Modal from 'react-modal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Recipe = () => {\n  _s();\n\n  const [recipes, setRecipe] = useState([]);\n  const [activeNewRecipe, setActiveNewRecipe] = useState(false);\n  const [activeRecipe, setActiveRecipe] = useState(false);\n  const [name, setName] = useState(\"\");\n  const [ingName, setIngName] = useState(\"\");\n  const [ingreedients, setIngreedients] = useState([]);\n  const recipe = ingreedients.reduce((o, key) => ({ ...o,\n    [key]: key\n  }), {});\n  const [modalIsOpen, setIsOpen] = React.useState(false);\n\n  function openModal() {\n    setIsOpen(true);\n  }\n\n  function closeModal() {\n    setIsOpen(false);\n    setRecipe(prevState => [...prevState, {\n      name,\n      recipe\n    }]);\n  }\n\n  console.log(activeRecipe);\n  console.log(activeNewRecipe);\n\n  function compare(a, b) {\n    if (a.index < b.index) {\n      return -1;\n    }\n  }\n\n  recipes.sort(compare);\n\n  const handleClickIng = e => {\n    e.preventDefault();\n    setIngreedients(preState => [...preState, ingName]);\n  };\n\n  const handleClickRecipe = e => {\n    e.preventDefault();\n    setActiveRecipe(prevState => !prevState);\n  };\n\n  console.log(recipes);\n  console.log(ingreedients); // if (activeNewRecipe === true)\n  //     return(\n  //         <section className={\"container\"}>\n  //         <form className={\"form\"} onSubmit={handleSubmit}>\n  //             <input className={\"new-recipe-title\"} placeholder={'Nazwa'} onChange={e => setName(e.target.value)}/>\n  //             <input className={\"new-recipe-title\"} placeholder={'składnik 1'} onChange={e => setIngName(e.target.value)}/>\n  //             {ingreedients.map((item,index)=>(\n  //                     <input key={index} className={\"new-recipe-title\"} placeholder={`składnik ${index+2}`} onChange={e => setIngName(e.target.value)}/>\n  //             ))}\n  //             <button onClick={handleClickIng}>dodaj składnik</button>\n  //             <button type={\"submit\"}>dodaj</button>\n  //\n  //         </form>\n  //         </section>\n  //     )\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"recipe\",\n      onClick: openModal,\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Dodaj Przepis!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 59\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), recipes.map((recipe, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"recipe\",\n      onClick: handleClickRecipe,\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: recipe.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: modalIsOpen,\n      onRequestClose: closeModal,\n      children: /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"form\",\n          onSubmit: closeModal,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"new-recipe-title\",\n            placeholder: 'Nazwa',\n            onChange: e => setName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"new-recipe-title\",\n            placeholder: 'składnik 1',\n            onChange: e => setIngName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this), ingreedients.map((item, index) => /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"new-recipe-title\",\n            placeholder: `składnik ${index + 2}`,\n            onChange: e => setIngName(e.target.value)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 29\n          }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleClickIng,\n            children: \"dodaj sk\\u0142adnik\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"dodaj\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Recipe, \"LPQZ0O9rb43r39yTj9o1Pg8ghqI=\");\n\n_c = Recipe;\nexport { Recipe };\n\nvar _c;\n\n$RefreshReg$(_c, \"Recipe\");","map":{"version":3,"sources":["/Users/blues/Dyplom/my-app/src/Recipe.js"],"names":["React","useState","Modal","Recipe","recipes","setRecipe","activeNewRecipe","setActiveNewRecipe","activeRecipe","setActiveRecipe","name","setName","ingName","setIngName","ingreedients","setIngreedients","recipe","reduce","o","key","modalIsOpen","setIsOpen","openModal","closeModal","prevState","console","log","compare","a","b","index","sort","handleClickIng","e","preventDefault","preState","handleClickRecipe","map","target","value","item"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport Modal from 'react-modal';\n\n\n\nconst Recipe = () => {\n    const [recipes, setRecipe] = useState([]);\n    const [activeNewRecipe, setActiveNewRecipe] = useState(false);\n    const [activeRecipe, setActiveRecipe] = useState(false);\n    const [name, setName] = useState(\"\");\n    const [ingName, setIngName] = useState(\"\");\n    const [ingreedients, setIngreedients] = useState([]);\n    const recipe = ingreedients.reduce((o, key) => ({ ...o, [key]: key}), {})\n    const [modalIsOpen, setIsOpen] = React.useState(false);\n    function openModal() {\n        setIsOpen(true);\n    }\n    function closeModal() {\n        setIsOpen(false);\n        setRecipe((prevState)=>[...prevState, {name, recipe}])\n    }\n\n    console.log(activeRecipe)\n    console.log(activeNewRecipe)\n    function compare(a, b) {\n        if ( a.index < b.index){\n            return -1;\n        }}\n    recipes.sort(compare)\n    const handleClickIng = (e) => {\n        e.preventDefault()\n        setIngreedients((preState)=>[...preState,ingName])\n    }\n    const handleClickRecipe = (e) => {\n        e.preventDefault()\n        setActiveRecipe((prevState) => !prevState);\n\n    }\n    console.log(recipes)\n    console.log(ingreedients)\n    // if (activeNewRecipe === true)\n    //     return(\n    //         <section className={\"container\"}>\n    //         <form className={\"form\"} onSubmit={handleSubmit}>\n    //             <input className={\"new-recipe-title\"} placeholder={'Nazwa'} onChange={e => setName(e.target.value)}/>\n    //             <input className={\"new-recipe-title\"} placeholder={'składnik 1'} onChange={e => setIngName(e.target.value)}/>\n    //             {ingreedients.map((item,index)=>(\n    //                     <input key={index} className={\"new-recipe-title\"} placeholder={`składnik ${index+2}`} onChange={e => setIngName(e.target.value)}/>\n    //             ))}\n    //             <button onClick={handleClickIng}>dodaj składnik</button>\n    //             <button type={\"submit\"}>dodaj</button>\n    //\n    //         </form>\n    //         </section>\n    //     )\n    return (\n        <section className={\"container\"}>\n            <div className={\"recipe\"} onClick={openModal}><h1>Dodaj Przepis!</h1></div>\n            {recipes.map((recipe, index) => (\n                <div key={index} className={\"recipe\"} onClick={handleClickRecipe}>\n                    <h2>{recipe.name}</h2>\n                </div>\n            ))}\n            <Modal\n                isOpen={modalIsOpen}\n                onRequestClose={closeModal}\n            >\n                <section className={\"container\"}>\n                    <form className={\"form\"} onSubmit={closeModal}>\n                        <input className={\"new-recipe-title\"} placeholder={'Nazwa'} onChange={e => setName(e.target.value)}/>\n                        <input className={\"new-recipe-title\"} placeholder={'składnik 1'} onChange={e => setIngName(e.target.value)}/>\n                        {ingreedients.map((item,index)=>(\n                            <input key={index} className={\"new-recipe-title\"} placeholder={`składnik ${index+2}`} onChange={e => setIngName(e.target.value)}/>\n                        ))}\n                        <button onClick={handleClickIng}>dodaj składnik</button>\n                        <button type={\"submit\"}>dodaj</button>\n\n                    </form>\n                </section>\n            </Modal>\n        </section>\n    );\n}\n\nexport { Recipe };"]},"metadata":{},"sourceType":"module"}