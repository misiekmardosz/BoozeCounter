{"ast":null,"code":"var _jsxFileName = \"/Users/blues/Dyplom/my-app/src/Recipe.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Modal from 'react-modal';\nimport { RecipeDetails } from \"./RecipeDetails\"; //uuid\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Recipe = () => {\n  _s();\n\n  const [recipes, setRecipe] = useState([]);\n  const [openedRecipe, setOpenRecipe] = useState(null);\n  const [name, setName] = useState(\"\");\n  const [ingName, setIngName] = useState(\"\");\n  const [ingreedients, setIngreedients] = useState([]);\n  const recipe = ingreedients.reduce((o, key) => ({ ...o,\n    [key]: key\n  }), {});\n  const [newRecipeModalIsOpen, setNewRecipeModalIsOpen] = React.useState(false);\n  const [recipeModalIsOpen, setRecipeModalIsOpen] = React.useState(false);\n\n  function compare(a, b) {\n    if (a.name < b.name) {\n      return -1;\n    }\n  }\n\n  recipes.sort(compare);\n\n  const handleClickIng = e => {\n    e.preventDefault();\n    setIngreedients(preState => [...preState, ingName]);\n  };\n\n  function openNewModal() {\n    setNewRecipeModalIsOpen(true);\n  }\n\n  function closeNewModal() {\n    setNewRecipeModalIsOpen(false);\n    setRecipe(prevState => [...prevState, {\n      name,\n      recipe\n    }]);\n  }\n\n  function openModal(recipe) {\n    setOpenRecipe(recipe);\n    setRecipeModalIsOpen(true);\n  }\n\n  function closeModal(close) {\n    setRecipeModalIsOpen(false);\n  }\n\n  console.log(openedRecipe);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"recipe\",\n        onClick: openNewModal,\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Dodaj Przepis!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), recipes.map((recipe, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"recipe\",\n        onClick: () => openModal(recipe),\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: recipe.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 25\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }, this)), /*#__PURE__*/_jsxDEV(Modal, {\n        isOpen: recipeModalIsOpen,\n        onRequestClose: closeModal,\n        ariaHideApp: false,\n        children: /*#__PURE__*/_jsxDEV(RecipeDetails, {\n          recipe: openedRecipe,\n          close: closeModal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        isOpen: newRecipeModalIsOpen,\n        onRequestClose: closeNewModal,\n        ariaHideApp: false,\n        children: /*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"container\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            className: \"form\",\n            onSubmit: closeNewModal,\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"new-recipe-title\",\n              placeholder: 'Nazwa',\n              onChange: e => setName(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: 'new-ing-div',\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"new-recipe-title\",\n                placeholder: 'składnik 1',\n                onChange: e => setIngName(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 29\n            }, this), ingreedients.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: 'new-ing-div',\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"new-recipe-title\",\n                placeholder: `składnik ${index + 2}`,\n                onChange: e => setIngName(e.target.value)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 33\n            }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleClickIng,\n              children: \"dodaj sk\\u0142adnik\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              children: \"dodaj\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(Recipe, \"7et/xUYoZfQyBdDzuG7oq9P1DU0=\");\n\n_c = Recipe;\nexport { Recipe };\n\nvar _c;\n\n$RefreshReg$(_c, \"Recipe\");","map":{"version":3,"sources":["/Users/blues/Dyplom/my-app/src/Recipe.js"],"names":["React","useState","Modal","RecipeDetails","Recipe","recipes","setRecipe","openedRecipe","setOpenRecipe","name","setName","ingName","setIngName","ingreedients","setIngreedients","recipe","reduce","o","key","newRecipeModalIsOpen","setNewRecipeModalIsOpen","recipeModalIsOpen","setRecipeModalIsOpen","compare","a","b","sort","handleClickIng","e","preventDefault","preState","openNewModal","closeNewModal","prevState","openModal","closeModal","close","console","log","map","index","target","value","item"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport Modal from 'react-modal';\nimport {RecipeDetails} from \"./RecipeDetails\";\n//uuid\n\n\nconst Recipe = () => {\n    const [recipes, setRecipe] = useState([]);\n    const [openedRecipe, setOpenRecipe] = useState(null);\n    const [name, setName] = useState(\"\");\n    const [ingName, setIngName] = useState(\"\");\n    const [ingreedients, setIngreedients] = useState([]);\n    const recipe = ingreedients.reduce((o, key) => ({ ...o, [key]: key}), {})\n    const [newRecipeModalIsOpen, setNewRecipeModalIsOpen] = React.useState(false);\n    const [recipeModalIsOpen, setRecipeModalIsOpen] = React.useState(false);\n    function compare(a, b) {\n        if ( a.name < b.name){\n            return -1;\n        }}\n    recipes.sort(compare)\n\n    const handleClickIng = (e) => {\n        e.preventDefault()\n        setIngreedients((preState)=>[...preState,ingName])\n    }\n    function openNewModal() {\n        setNewRecipeModalIsOpen(true);\n    }\n    function closeNewModal() {\n        setNewRecipeModalIsOpen(false);\n        setRecipe((prevState)=>[...prevState, {name, recipe}])\n    }\n    function openModal(recipe) {\n        setOpenRecipe(recipe);\n        setRecipeModalIsOpen(true);\n    }\n    function closeModal(close) {\n        setRecipeModalIsOpen(false);\n    }\n    console.log(openedRecipe)\n\n    return (\n        <>\n            {/*<header>*/}\n            {/*    <h1>BOOZE COUNTER</h1>*/}\n            {/*</header>*/}\n            <section className={\"container\"}>\n                <div className={\"recipe\"} onClick={openNewModal}>\n                    <h1>Dodaj Przepis!</h1>\n                </div>\n                {recipes.map((recipe, index) => (\n                    <div key={index} className={\"recipe\"} onClick={ () => openModal(recipe)}>\n                        <h2>{recipe.name}</h2>\n                    </div>\n                ))}\n                <Modal\n                    isOpen={recipeModalIsOpen}\n                    onRequestClose={closeModal}\n                    ariaHideApp={false}\n                >\n                    <RecipeDetails recipe={openedRecipe} close={closeModal}/>\n                </Modal>\n                <Modal\n                    isOpen={newRecipeModalIsOpen}\n                    onRequestClose={closeNewModal}\n                    ariaHideApp={false}\n                >\n                    <section className={\"container\"}>\n                        <form className={\"form\"} onSubmit={closeNewModal}>\n                            <input className={\"new-recipe-title\"} placeholder={'Nazwa'} onChange={e => setName(e.target.value)}/>\n                            <div className={'new-ing-div'}>\n                                <input className={\"new-recipe-title\"} placeholder={'składnik 1'} onChange={e => setIngName(e.target.value)}/>\n                            </div>\n\n                            {ingreedients.map((item,index)=>(\n                                <div className={'new-ing-div'}>\n                                    <input key={index} className={\"new-recipe-title\"} placeholder={`składnik ${index+2}`} onChange={e => setIngName(e.target.value)}/>\n                                    {/*<input type={'number'} className={\"new-recipe-title\"} placeholder={\"quantity\"}/>*/}\n                                </div>\n                            ))}\n                            <button onClick={handleClickIng}>dodaj składnik</button>\n                            <button type={\"submit\"}>dodaj</button>\n\n                        </form>\n                    </section>\n                </Modal>\n            </section>\n        </>\n    );\n}\n\nexport { Recipe };"]},"metadata":{},"sourceType":"module"}