{"ast":null,"code":"var _jsxFileName = \"/Users/blues/Dyplom/my-app/src/Recipe.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Modal from 'react-modal';\nimport { RecipeDetails } from \"./RecipeDetails\"; //uuid\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Recipe = () => {\n  _s();\n\n  const [recipes, setRecipes] = useState([]);\n  const [openedRecipe, setOpenRecipe] = useState(null);\n  const [name, setName] = useState(\"\");\n  const [process, setProcess] = useState(\"\");\n  const [ingName, setIngName] = useState(\"\");\n  const [ingValue, setIngValue] = useState(\"\");\n  const [ingredients, setIngredients] = useState([]);\n  const [ingredientsValue, setIngredientsValue] = useState([]);\n  const [newRecipeModalIsOpen, setNewRecipeModalIsOpen] = React.useState(false);\n  const [recipeModalIsOpen, setRecipeModalIsOpen] = React.useState(false);\n  const recipe = ingredientsValue.reduce(function (recipe, field, index) {\n    recipe[ingredients[index]] = field;\n    return recipe;\n  }, {});\n\n  function compare(a, b) {\n    if (a.name < b.name) {\n      return 1;\n    }\n  }\n\n  recipes.sort(compare); // console.log(recipes)\n\n  const handleClickIng = e => {\n    e.preventDefault();\n    setIngredients(preState => [ingName]);\n    setIngredientsValue(preState => [ingValue]);\n  };\n\n  function openNewModal(e) {\n    e.preventDefault();\n    setNewRecipeModalIsOpen(true);\n  }\n\n  function closeNewModal(e) {\n    e.preventDefault();\n    setIngredients(preState => [...preState, ingName]);\n    setIngredientsValue(preState => [...preState, ingValue]);\n    setNewRecipeModalIsOpen(false);\n    setRecipes(prevState => [...prevState, {\n      name,\n      recipe,\n      process\n    }]);\n    setIngredients(prevState => []);\n  }\n\n  function openModal(recipe) {\n    setOpenRecipe(recipe);\n    setRecipeModalIsOpen(true);\n  }\n\n  function closeModal(close) {\n    setRecipeModalIsOpen(false);\n  } // console.log(recipes)\n  // console.log(openedRecipe)\n  // console.log(ingName)\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"recipe\",\n        onClick: openNewModal,\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Add New\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), recipes.map((recipe, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"recipe\",\n        onClick: () => openModal(recipe),\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: recipe.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 25\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }, this)), /*#__PURE__*/_jsxDEV(Modal, {\n        isOpen: recipeModalIsOpen,\n        onRequestClose: closeModal,\n        ariaHideApp: false,\n        children: /*#__PURE__*/_jsxDEV(RecipeDetails, {\n          recipe: openedRecipe,\n          close: closeModal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        isOpen: newRecipeModalIsOpen,\n        onRequestClose: closeNewModal,\n        ariaHideApp: false,\n        children: /*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"container\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            className: \"form\",\n            onSubmit: closeNewModal,\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"new-recipe-title\",\n              placeholder: 'Drink Name',\n              onChange: e => setName(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: 'new-ing-div',\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"new-recipe-title\",\n                placeholder: 'ingredient 1',\n                onChange: e => setIngName(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: 'number',\n                className: \"new-recipe-title\",\n                placeholder: `quantity`,\n                onChange: e => setIngValue(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 29\n            }, this), ingredients.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: 'new-ing-div',\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"new-recipe-title\",\n                placeholder: `ingredient ${index + 2}`,\n                onChange: e => setIngName(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: 'number',\n                className: \"new-recipe-title\",\n                placeholder: \"quantity\",\n                onChange: e => setIngValue(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 37\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 33\n            }, this)), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              className: \"new-recipe-title\",\n              onChange: e => setProcess(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleClickIng,\n              children: \"dodaj sk\\u0142adnik\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              children: \"dodaj\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(Recipe, \"pmUKDWX82+kiTks5U1Jm/wlxOUc=\");\n\n_c = Recipe;\nexport { Recipe }; // check on click for recipe to prevent refreshiing\n\nvar _c;\n\n$RefreshReg$(_c, \"Recipe\");","map":{"version":3,"sources":["/Users/blues/Dyplom/my-app/src/Recipe.js"],"names":["React","useEffect","useState","Modal","RecipeDetails","Recipe","recipes","setRecipes","openedRecipe","setOpenRecipe","name","setName","process","setProcess","ingName","setIngName","ingValue","setIngValue","ingredients","setIngredients","ingredientsValue","setIngredientsValue","newRecipeModalIsOpen","setNewRecipeModalIsOpen","recipeModalIsOpen","setRecipeModalIsOpen","recipe","reduce","field","index","compare","a","b","sort","handleClickIng","e","preventDefault","preState","openNewModal","closeNewModal","prevState","openModal","closeModal","close","map","target","value","item"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAA0C,OAA1C;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAAQC,aAAR,QAA4B,iBAA5B,C,CACA;;;;;AAGA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACjB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACM,YAAD,EAAeC,aAAf,IAAgCP,QAAQ,CAAC,IAAD,CAA9C;AACA,QAAM,CAACQ,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACU,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACY,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACc,QAAD,EAAWC,WAAX,IAA0Bf,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACgB,WAAD,EAAcC,cAAd,IAAgCjB,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACkB,gBAAD,EAAmBC,mBAAnB,IAA0CnB,QAAQ,CAAC,EAAD,CAAxD;AACA,QAAM,CAACoB,oBAAD,EAAuBC,uBAAvB,IAAkDvB,KAAK,CAACE,QAAN,CAAe,KAAf,CAAxD;AACA,QAAM,CAACsB,iBAAD,EAAoBC,oBAApB,IAA4CzB,KAAK,CAACE,QAAN,CAAe,KAAf,CAAlD;AAEA,QAAMwB,MAAM,GAAIN,gBAAgB,CAACO,MAAjB,CAAwB,UAASD,MAAT,EAAiBE,KAAjB,EAAwBC,KAAxB,EAA+B;AACnEH,IAAAA,MAAM,CAACR,WAAW,CAACW,KAAD,CAAZ,CAAN,GAA6BD,KAA7B;AACA,WAAOF,MAAP;AACH,GAHe,EAGb,EAHa,CAAhB;;AAKA,WAASI,OAAT,CAAiBC,CAAjB,EAAoBC,CAApB,EAAuB;AACnB,QAAKD,CAAC,CAACrB,IAAF,GAASsB,CAAC,CAACtB,IAAhB,EAAqB;AACjB,aAAO,CAAP;AACH;AAAC;;AACNJ,EAAAA,OAAO,CAAC2B,IAAR,CAAaH,OAAb,EArBiB,CAsBjB;;AACA,QAAMI,cAAc,GAAIC,CAAD,IAAO;AAC1BA,IAAAA,CAAC,CAACC,cAAF;AACAjB,IAAAA,cAAc,CAAEkB,QAAD,IAAY,CAACvB,OAAD,CAAb,CAAd;AACAO,IAAAA,mBAAmB,CAAEgB,QAAD,IAAY,CAACrB,QAAD,CAAb,CAAnB;AACH,GAJD;;AAKA,WAASsB,YAAT,CAAsBH,CAAtB,EAAyB;AACrBA,IAAAA,CAAC,CAACC,cAAF;AACAb,IAAAA,uBAAuB,CAAC,IAAD,CAAvB;AACH;;AACD,WAASgB,aAAT,CAAuBJ,CAAvB,EAA0B;AACtBA,IAAAA,CAAC,CAACC,cAAF;AACAjB,IAAAA,cAAc,CAAEkB,QAAD,IAAY,CAAC,GAAGA,QAAJ,EAAavB,OAAb,CAAb,CAAd;AACAO,IAAAA,mBAAmB,CAAEgB,QAAD,IAAY,CAAC,GAAGA,QAAJ,EAAarB,QAAb,CAAb,CAAnB;AACAO,IAAAA,uBAAuB,CAAC,KAAD,CAAvB;AACAhB,IAAAA,UAAU,CAAEiC,SAAD,IAAa,CAAC,GAAGA,SAAJ,EAAe;AAAC9B,MAAAA,IAAD;AAAOgB,MAAAA,MAAP;AAAed,MAAAA;AAAf,KAAf,CAAd,CAAV;AACAO,IAAAA,cAAc,CAAEqB,SAAD,IAAe,EAAhB,CAAd;AAEH;;AACD,WAASC,SAAT,CAAmBf,MAAnB,EAA2B;AACvBjB,IAAAA,aAAa,CAACiB,MAAD,CAAb;AACAD,IAAAA,oBAAoB,CAAC,IAAD,CAApB;AACH;;AACD,WAASiB,UAAT,CAAoBC,KAApB,EAA2B;AACvBlB,IAAAA,oBAAoB,CAAC,KAAD,CAApB;AACH,GA/CgB,CAgDjB;AACA;AACA;;;AACA,sBACI;AAAA,2BAII;AAAS,MAAA,SAAS,EAAE,WAApB;AAAA,8BACI;AAAK,QAAA,SAAS,EAAE,QAAhB;AAA0B,QAAA,OAAO,EAAEa,YAAnC;AAAA,+BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,EAIKhC,OAAO,CAACsC,GAAR,CAAY,CAAClB,MAAD,EAASG,KAAT,kBACT;AAAiB,QAAA,SAAS,EAAE,QAA5B;AAAsC,QAAA,OAAO,EAAG,MAAMY,SAAS,CAACf,MAAD,CAA/D;AAAA,+BACI;AAAA,oBAAKA,MAAM,CAAChB;AAAZ;AAAA;AAAA;AAAA;AAAA;AADJ,SAAUmB,KAAV;AAAA;AAAA;AAAA;AAAA,cADH,CAJL,eASI,QAAC,KAAD;AACI,QAAA,MAAM,EAAEL,iBADZ;AAEI,QAAA,cAAc,EAAEkB,UAFpB;AAGI,QAAA,WAAW,EAAE,KAHjB;AAAA,+BAKI,QAAC,aAAD;AAAe,UAAA,MAAM,EAAElC,YAAvB;AAAqC,UAAA,KAAK,EAAEkC;AAA5C;AAAA;AAAA;AAAA;AAAA;AALJ;AAAA;AAAA;AAAA;AAAA,cATJ,eAgBI,QAAC,KAAD;AACI,QAAA,MAAM,EAAEpB,oBADZ;AAEI,QAAA,cAAc,EAAEiB,aAFpB;AAGI,QAAA,WAAW,EAAE,KAHjB;AAAA,+BAKI;AAAS,UAAA,SAAS,EAAE,WAApB;AAAA,iCACI;AAAM,YAAA,SAAS,EAAE,MAAjB;AAAyB,YAAA,QAAQ,EAAEA,aAAnC;AAAA,oCACI;AAAO,cAAA,SAAS,EAAE,kBAAlB;AAAsC,cAAA,WAAW,EAAE,YAAnD;AAAiE,cAAA,QAAQ,EAAEJ,CAAC,IAAIxB,OAAO,CAACwB,CAAC,CAACU,MAAF,CAASC,KAAV;AAAvF;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAK,cAAA,SAAS,EAAE,aAAhB;AAAA,sCACI;AAAO,gBAAA,SAAS,EAAE,kBAAlB;AAAsC,gBAAA,WAAW,EAAE,cAAnD;AAAmE,gBAAA,QAAQ,EAAEX,CAAC,IAAIpB,UAAU,CAACoB,CAAC,CAACU,MAAF,CAASC,KAAV;AAA5F;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI;AAAO,gBAAA,IAAI,EAAE,QAAb;AAAuB,gBAAA,SAAS,EAAE,kBAAlC;AAAsD,gBAAA,WAAW,EAAG,UAApE;AAA+E,gBAAA,QAAQ,EAAEX,CAAC,IAAIlB,WAAW,CAACkB,CAAC,CAACU,MAAF,CAASC,KAAV;AAAzG;AAAA;AAAA;AAAA;AAAA,sBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,EAOK5B,WAAW,CAAC0B,GAAZ,CAAgB,CAACG,IAAD,EAAMlB,KAAN,kBACb;AAAiB,cAAA,SAAS,EAAE,aAA5B;AAAA,sCACI;AAAQ,gBAAA,SAAS,EAAE,kBAAnB;AAAuC,gBAAA,WAAW,EAAG,cAAaA,KAAK,GAAC,CAAE,EAA1E;AAA6E,gBAAA,QAAQ,EAAEM,CAAC,IAAIpB,UAAU,CAACoB,CAAC,CAACU,MAAF,CAASC,KAAV;AAAtG;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI;AAAO,gBAAA,IAAI,EAAE,QAAb;AAAuB,gBAAA,SAAS,EAAE,kBAAlC;AAAsD,gBAAA,WAAW,EAAE,UAAnE;AAA+E,gBAAA,QAAQ,EAAEX,CAAC,IAAIlB,WAAW,CAACkB,CAAC,CAACU,MAAF,CAASC,KAAV;AAAzG;AAAA;AAAA;AAAA;AAAA,sBAFJ;AAAA,eAAUjB,KAAV;AAAA;AAAA;AAAA;AAAA,oBADH,CAPL,eAaI;AAAU,cAAA,SAAS,EAAE,kBAArB;AAAyC,cAAA,QAAQ,EAAEM,CAAC,IAAItB,UAAU,CAACsB,CAAC,CAACU,MAAF,CAASC,KAAV;AAAlE;AAAA;AAAA;AAAA;AAAA,oBAbJ,eAcI;AAAQ,cAAA,OAAO,EAAEZ,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAdJ,eAeI;AAAQ,cAAA,IAAI,EAAE,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAfJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AALJ;AAAA;AAAA;AAAA;AAAA,cAhBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAJJ,mBADJ;AAkDH,CArGD;;GAAM7B,M;;KAAAA,M;AAuGN,SAASA,MAAT,G,CAEA","sourcesContent":["import React, {useEffect, useState,} from 'react';\nimport Modal from 'react-modal';\nimport {RecipeDetails} from \"./RecipeDetails\";\n//uuid\n\n\nconst Recipe = () => {\n    const [recipes, setRecipes] = useState([]);\n    const [openedRecipe, setOpenRecipe] = useState(null);\n    const [name, setName] = useState(\"\");\n    const [process, setProcess] = useState(\"\");\n    const [ingName, setIngName] = useState(\"\");\n    const [ingValue, setIngValue] = useState(\"\");\n    const [ingredients, setIngredients] = useState([]);\n    const [ingredientsValue, setIngredientsValue] = useState([]);\n    const [newRecipeModalIsOpen, setNewRecipeModalIsOpen] = React.useState(false);\n    const [recipeModalIsOpen, setRecipeModalIsOpen] = React.useState(false);\n\n    const recipe =  ingredientsValue.reduce(function(recipe, field, index) {\n        recipe[ingredients[index]] = field;\n        return recipe;\n    }, {})\n\n    function compare(a, b) {\n        if ( a.name < b.name){\n            return 1;\n        }}\n    recipes.sort(compare)\n    // console.log(recipes)\n    const handleClickIng = (e) => {\n        e.preventDefault()\n        setIngredients((preState)=>[ingName])\n        setIngredientsValue((preState)=>[ingValue])\n    }\n    function openNewModal(e) {\n        e.preventDefault()\n        setNewRecipeModalIsOpen(true);\n    }\n    function closeNewModal(e) {\n        e.preventDefault()\n        setIngredients((preState)=>[...preState,ingName])\n        setIngredientsValue((preState)=>[...preState,ingValue])\n        setNewRecipeModalIsOpen(false);\n        setRecipes((prevState)=>[...prevState, {name, recipe, process}])\n        setIngredients((prevState) => [])\n\n    }\n    function openModal(recipe) {\n        setOpenRecipe(recipe);\n        setRecipeModalIsOpen(true);\n    }\n    function closeModal(close) {\n        setRecipeModalIsOpen(false);\n    }\n    // console.log(recipes)\n    // console.log(openedRecipe)\n    // console.log(ingName)\n    return (\n        <>\n            {/*<header>*/}\n            {/*    <h1>BOOZE COUNTER</h1>*/}\n            {/*</header>*/}\n            <section className={\"container\"}>\n                <div className={\"recipe\"} onClick={openNewModal}>\n                    <h1>Add New</h1>\n                </div>\n                {recipes.map((recipe, index) => (\n                    <div key={index} className={\"recipe\"} onClick={ () => openModal(recipe)}>\n                        <h2>{recipe.name}</h2>\n                    </div>\n                ))}\n                <Modal\n                    isOpen={recipeModalIsOpen}\n                    onRequestClose={closeModal}\n                    ariaHideApp={false}\n                >\n                    <RecipeDetails recipe={openedRecipe} close={closeModal}/>\n                </Modal>\n                <Modal\n                    isOpen={newRecipeModalIsOpen}\n                    onRequestClose={closeNewModal}\n                    ariaHideApp={false}\n                >\n                    <section className={\"container\"}>\n                        <form className={\"form\"} onSubmit={closeNewModal}>\n                            <input className={\"new-recipe-title\"} placeholder={'Drink Name'} onChange={e => setName(e.target.value)}/>\n                            <div className={'new-ing-div'}>\n                                <input className={\"new-recipe-title\"} placeholder={'ingredient 1'} onChange={e => setIngName(e.target.value)}/>\n                                <input type={'number'} className={\"new-recipe-title\"} placeholder={`quantity`} onChange={e => setIngValue(e.target.value)}/>\n                            </div>\n\n                            {ingredients.map((item,index)=>(\n                                <div key={index} className={'new-ing-div'}>\n                                    <input  className={\"new-recipe-title\"} placeholder={`ingredient ${index+2}`} onChange={e => setIngName(e.target.value)}/>\n                                    <input type={'number'} className={\"new-recipe-title\"} placeholder={\"quantity\"} onChange={e => setIngValue(e.target.value)}/>\n                                </div>\n                            ))}\n                            <textarea className={\"new-recipe-title\"} onChange={e => setProcess(e.target.value)}/>\n                            <button onClick={handleClickIng}>dodaj składnik</button>\n                            <button type={\"submit\"}>dodaj</button>\n\n                        </form>\n                    </section>\n                </Modal>\n            </section>\n        </>\n    );\n}\n\nexport { Recipe };\n\n// check on click for recipe to prevent refreshiing"]},"metadata":{},"sourceType":"module"}