{"ast":null,"code":"var _jsxFileName = \"/Users/blues/Dyplom/my-app/src/Recipe.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Modal from 'react-modal';\nimport { RecipeDetails } from \"./RecipeDetails\"; //uuid\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_URL = 'http://localhost:3000';\n\nconst Recipe = () => {\n  _s();\n\n  const [recipes, setRecipes] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [openedRecipe, setOpenRecipe] = useState(null);\n  const [name, setName] = useState(\"\");\n  const [process, setProcess] = useState(\"\");\n  const [ingName, setIngName] = useState(\"\");\n  const [ingValue, setIngValue] = useState();\n  const [ingredients, setIngredients] = useState([]);\n  const [ingredientsValue, setIngredientsValue] = useState([]);\n  const [newRecipeModalIsOpen, setNewRecipeModalIsOpen] = React.useState(false);\n  const [recipeModalIsOpen, setRecipeModalIsOpen] = React.useState(false);\n  useEffect(() => {\n    setLoading(true);\n    fetch(`${API_URL}/db`).then(response => response.json()).then(data => {\n      setRecipes(data);\n      setLoading(false);\n    });\n  }, []);\n  const recipe = ingredientsValue.reduce(function (recipe, field, index) {\n    recipe[ingredients[index]] = field;\n    return recipe;\n  }, {}); // function compare(a, b) {\n  //     if ( a.name < b.name){\n  //         return 1;\n  //     }}\n  // recipes.sort(compare)\n  // console.log(recipes)\n\n  const handleClickIng = e => {\n    e.preventDefault();\n    setIngredients(preState => [...preState, ingName]);\n    setIngredientsValue(preState => [...preState, ingValue]);\n    setIngValue(prevState => null);\n  };\n\n  function openNewModal() {\n    setNewRecipeModalIsOpen(true);\n  }\n\n  function closeNewModal(e) {\n    e.preventDefault();\n    setRecipes(prevState => [...prevState, {\n      name,\n      recipe,\n      process\n    }]);\n    setIngredients(prevState => []);\n    setIngredientsValue(prevState => []);\n    setNewRecipeModalIsOpen(false);\n  }\n\n  function openModal(recipe) {\n    setOpenRecipe(recipe);\n    setRecipeModalIsOpen(true);\n  }\n\n  function closeModal(close) {\n    setRecipeModalIsOpen(false);\n  }\n\n  console.log(recipes);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Trwa \\u0142adowanie...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 25\n  }, this);\n  if (recipe.length === 0) return null;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"recipe\",\n        onClick: openNewModal,\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Add New\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), recipes.map((recipe, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"recipe\",\n        onClick: () => openModal(recipe),\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: recipe.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 25\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }, this)), /*#__PURE__*/_jsxDEV(Modal, {\n        isOpen: recipeModalIsOpen,\n        onRequestClose: closeModal,\n        ariaHideApp: false,\n        children: /*#__PURE__*/_jsxDEV(RecipeDetails, {\n          recipe: openedRecipe,\n          close: closeModal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        isOpen: newRecipeModalIsOpen,\n        onRequestClose: closeNewModal,\n        ariaHideApp: false,\n        children: /*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"container\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            className: \"form\",\n            onSubmit: closeNewModal,\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"new-recipe-title\",\n              placeholder: 'Drink Name',\n              onChange: e => setName(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: 'new-ing-div',\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"new-recipe-title\",\n                placeholder: 'ingredient 1',\n                onChange: e => setIngName(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: 'number',\n                className: \"new-recipe-title\",\n                placeholder: `quantity`,\n                onChange: e => setIngValue(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 29\n            }, this), ingredients.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: 'new-ing-div',\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"new-recipe-title\",\n                placeholder: `ingredient ${index + 2}`,\n                onChange: e => setIngName(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: 'number',\n                className: \"new-recipe-title\",\n                placeholder: \"quantity\",\n                onChange: e => setIngValue(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 37\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 33\n            }, this)), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              className: \"new-recipe-title\",\n              onChange: e => setProcess(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleClickIng,\n              children: \"dodaj sk\\u0142adnik\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              children: \"dodaj\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(Recipe, \"dSvJMdCOandlh93+ABQQy1N79/s=\");\n\n_c = Recipe;\nexport { Recipe }; // check on click for recipe to prevent refreshiing\n\nvar _c;\n\n$RefreshReg$(_c, \"Recipe\");","map":{"version":3,"sources":["/Users/blues/Dyplom/my-app/src/Recipe.js"],"names":["React","useEffect","useState","Modal","RecipeDetails","API_URL","Recipe","recipes","setRecipes","loading","setLoading","openedRecipe","setOpenRecipe","name","setName","process","setProcess","ingName","setIngName","ingValue","setIngValue","ingredients","setIngredients","ingredientsValue","setIngredientsValue","newRecipeModalIsOpen","setNewRecipeModalIsOpen","recipeModalIsOpen","setRecipeModalIsOpen","fetch","then","response","json","data","recipe","reduce","field","index","handleClickIng","e","preventDefault","preState","prevState","openNewModal","closeNewModal","openModal","closeModal","close","console","log","length","map","target","value","item"],"mappings":"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","sourcesContent":["import React, {useEffect, useState,} from 'react';\nimport Modal from 'react-modal';\nimport {RecipeDetails} from \"./RecipeDetails\";\n//uuid\n\nconst API_URL = 'http://localhost:3000';\n\nconst Recipe = () => {\n    const [recipes, setRecipes] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [openedRecipe, setOpenRecipe] = useState(null);\n    const [name, setName] = useState(\"\");\n    const [process, setProcess] = useState(\"\");\n    const [ingName, setIngName] = useState(\"\");\n    const [ingValue, setIngValue] = useState();\n    const [ingredients, setIngredients] = useState([]);\n    const [ingredientsValue, setIngredientsValue] = useState([]);\n    const [newRecipeModalIsOpen, setNewRecipeModalIsOpen] = React.useState(false);\n    const [recipeModalIsOpen, setRecipeModalIsOpen] = React.useState(false);\n\n    useEffect(() => {\n        setLoading(true);\n        fetch(`${API_URL}/db`)\n            .then((response) => response.json())\n            .then((data) => {\n                setRecipes(data);\n                setLoading(false);\n            });\n    }, []);\n\n\n    const recipe =  ingredientsValue.reduce(function(recipe, field, index) {\n        recipe[ingredients[index]] = field;\n        return recipe;\n    }, {})\n\n    // function compare(a, b) {\n    //     if ( a.name < b.name){\n    //         return 1;\n    //     }}\n    // recipes.sort(compare)\n    // console.log(recipes)\n    const handleClickIng = (e) => {\n        e.preventDefault()\n        setIngredients((preState)=>[...preState,ingName])\n        setIngredientsValue((preState)=>[...preState,ingValue])\n        setIngValue(prevState => null)\n    }\n    function openNewModal() {\n        setNewRecipeModalIsOpen(true);\n    }\n    function closeNewModal(e) {\n        e.preventDefault()\n        setRecipes((prevState)=>[...prevState, {name, recipe, process}])\n        setIngredients((prevState) => [])\n        setIngredientsValue((prevState) => [])\n        setNewRecipeModalIsOpen(false);\n\n\n    }\n    function openModal(recipe) {\n        setOpenRecipe(recipe);\n        setRecipeModalIsOpen(true);\n    }\n    function closeModal(close) {\n        setRecipeModalIsOpen(false);\n    }\n    console.log(recipes)\n\n    if (loading) return <p>Trwa ładowanie...</p>;\n    if (recipe.length === 0) return null;\n    return (\n        <>\n            <section className={\"container\"}>\n                <div className={\"recipe\"} onClick={openNewModal}>\n                    <h1>Add New</h1>\n                </div>\n                {recipes.map((recipe, index) => (\n                    <div key={index} className={\"recipe\"} onClick={ () => openModal(recipe)}>\n                        <h2>{recipe.name}</h2>\n                    </div>\n                ))}\n                <Modal\n                    isOpen={recipeModalIsOpen}\n                    onRequestClose={closeModal}\n                    ariaHideApp={false}\n                >\n                    <RecipeDetails recipe={openedRecipe} close={closeModal}/>\n                </Modal>\n                <Modal\n                    isOpen={newRecipeModalIsOpen}\n                    onRequestClose={closeNewModal}\n                    ariaHideApp={false}\n                >\n                    <section className={\"container\"}>\n                        <form className={\"form\"} onSubmit={closeNewModal}>\n                            <input className={\"new-recipe-title\"} placeholder={'Drink Name'} onChange={e => setName(e.target.value)}/>\n                            <div className={'new-ing-div'}>\n                                <input className={\"new-recipe-title\"} placeholder={'ingredient 1'} onChange={e => setIngName(e.target.value)}/>\n                                <input type={'number'} className={\"new-recipe-title\"} placeholder={`quantity`} onChange={e => setIngValue(e.target.value)}/>\n                            </div>\n\n                            {ingredients.map((item,index)=>(\n                                <div key={index} className={'new-ing-div'}>\n                                    <input  className={\"new-recipe-title\"} placeholder={`ingredient ${index+2}`} onChange={e => setIngName(e.target.value)}/>\n                                    <input type={'number'} className={\"new-recipe-title\"} placeholder={\"quantity\"} onChange={e => setIngValue(e.target.value)}/>\n                                </div>\n                            ))}\n                            <textarea className={\"new-recipe-title\"} onChange={e => setProcess(e.target.value)}/>\n                            <button onClick={handleClickIng}>dodaj składnik</button>\n                            <button type={\"submit\"}>dodaj</button>\n\n                        </form>\n                    </section>\n                </Modal>\n            </section>\n        </>\n    );\n}\n\nexport { Recipe };\n\n// check on click for recipe to prevent refreshiing"]},"metadata":{},"sourceType":"module"}