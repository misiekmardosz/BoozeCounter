{"ast":null,"code":"var _jsxFileName = \"/Users/blues/Dyplom/my-app/src/Recipe.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Modal from 'react-modal';\nimport { RecipeDetails } from \"./RecipeDetails\"; //uuid\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_URL = 'http://localhost:3000';\n\nconst Recipe = () => {\n  _s();\n\n  const [recipes, setRecipes] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [openedRecipe, setOpenRecipe] = useState(null);\n  const [name, setName] = useState(\"\");\n  const [process, setProcess] = useState(\"\");\n  const [ingName, setIngName] = useState(\"\");\n  const [ingValue, setIngValue] = useState();\n  const [ingredients, setIngredients] = useState([]);\n  const [ingredientsValue, setIngredientsValue] = useState([]);\n  const [newRecipeModalIsOpen, setNewRecipeModalIsOpen] = React.useState(false);\n  const [recipeModalIsOpen, setRecipeModalIsOpen] = React.useState(false);\n  useEffect(() => {\n    setLoading(true);\n    fetch(`${API_URL}/recipes`).then(response => response.json()).then(data => {\n      setRecipes(data);\n      setLoading(false);\n    });\n  }, []);\n\n  const deleteRecipe = id => {\n    setLoading(true);\n    fetch(`${API_URL}/recipes/${id}`, {\n      method: 'DELETE'\n    }).then(response => response.json()).then(() => {\n      setRecipes(prevState => prevState.filter(recipe => recipe.id !== id));\n      setLoading(false);\n    });\n  };\n\n  const addNewRecipe = () => {\n    fetch(`${API_URL}/recipes`, {\n      method: 'POST',\n      body: JSON.stringify({\n        name,\n        recipe,\n        process\n      }),\n      headers: {\n        'Content-type': 'application/json'\n      }\n    }).then(resp => resp.json()).then(newRecipes => {\n      setIngredients(preState => [...preState, ingName]);\n      setIngredientsValue(preState => [...preState, ingValue]);\n      setRecipes(prevState => [...prevState, {\n        name,\n        recipe,\n        process\n      }]);\n    });\n  };\n\n  const recipe = ingredientsValue.reduce(function (recipe, field, index) {\n    recipe[ingredients[index]] = field;\n    return recipe;\n  }, {});\n  console.log(recipes); // console.log(ingValue)\n\n  const handleClickIng = e => {\n    e.preventDefault();\n    setIngredients(preState => [...preState, ingName]);\n    setIngredientsValue(preState => [...preState, ingValue]);\n    setIngValue(prevState => null);\n  };\n\n  function openNewModal() {\n    setNewRecipeModalIsOpen(true);\n  }\n\n  function closeNewModal(e) {\n    e.preventDefault();\n    addNewRecipe();\n    setIngredients(prevState => []);\n    setIngredientsValue(prevState => []);\n    setNewRecipeModalIsOpen(false);\n  }\n\n  function openModal(recipe) {\n    setOpenRecipe(recipe);\n    setRecipeModalIsOpen(true);\n  }\n\n  function closeModal(close) {\n    setRecipeModalIsOpen(false);\n  } // console.log(recipes)\n\n\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Trwa \\u0142adowanie...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 25\n  }, this);\n  if (recipe.length === 0) return null;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"recipe\",\n        onClick: openNewModal,\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Add New\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), recipes.map(recipe => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"recipe\",\n        onClick: () => openModal(recipe),\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: recipe.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 25\n        }, this)\n      }, recipe.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 21\n      }, this)), /*#__PURE__*/_jsxDEV(Modal, {\n        isOpen: recipeModalIsOpen,\n        onRequestClose: closeModal,\n        ariaHideApp: false,\n        children: /*#__PURE__*/_jsxDEV(RecipeDetails, {\n          recipe: openedRecipe,\n          close: closeModal,\n          deleteRecipe1: deleteRecipe,\n          recipes: recipes\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        isOpen: newRecipeModalIsOpen,\n        onRequestClose: closeNewModal,\n        ariaHideApp: false,\n        children: /*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"container\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            className: \"form\",\n            onSubmit: closeNewModal,\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"new-recipe-title\",\n              placeholder: 'Drink Name',\n              onChange: e => setName(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: 'new-ing-div',\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"new-recipe-title\",\n                placeholder: 'ingredient 1',\n                onChange: e => setIngName(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: 'number',\n                className: \"new-recipe-title\",\n                placeholder: `quantity`,\n                onChange: e => setIngValue(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 29\n            }, this), ingredients.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: 'new-ing-div',\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"new-recipe-title\",\n                placeholder: `ingredient ${index + 2}`,\n                onChange: e => setIngName(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: 'number',\n                className: \"new-recipe-title\",\n                placeholder: \"quantity\",\n                onChange: e => setIngValue(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 37\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 33\n            }, this)), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              className: \"new-recipe-title\",\n              onChange: e => setProcess(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleClickIng,\n              children: \"dodaj sk\\u0142adnik\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              children: \"dodaj\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(Recipe, \"dSvJMdCOandlh93+ABQQy1N79/s=\");\n\n_c = Recipe;\nexport { Recipe }; // check on click for recipe to prevent refreshiing\n\nvar _c;\n\n$RefreshReg$(_c, \"Recipe\");","map":{"version":3,"sources":["/Users/blues/Dyplom/my-app/src/Recipe.js"],"names":["React","useEffect","useState","Modal","RecipeDetails","API_URL","Recipe","recipes","setRecipes","loading","setLoading","openedRecipe","setOpenRecipe","name","setName","process","setProcess","ingName","setIngName","ingValue","setIngValue","ingredients","setIngredients","ingredientsValue","setIngredientsValue","newRecipeModalIsOpen","setNewRecipeModalIsOpen","recipeModalIsOpen","setRecipeModalIsOpen","fetch","then","response","json","data","deleteRecipe","id","method","prevState","filter","recipe","addNewRecipe","body","JSON","stringify","headers","resp","newRecipes","preState","reduce","field","index","console","log","handleClickIng","e","preventDefault","openNewModal","closeNewModal","openModal","closeModal","close","length","map","target","value","item"],"mappings":"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","sourcesContent":["import React, {useEffect, useState,} from 'react';\nimport Modal from 'react-modal';\nimport {RecipeDetails} from \"./RecipeDetails\";\n//uuid\n\nconst API_URL = 'http://localhost:3000';\n\nconst Recipe = () => {\n    const [recipes, setRecipes] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [openedRecipe, setOpenRecipe] = useState(null);\n    const [name, setName] = useState(\"\");\n    const [process, setProcess] = useState(\"\");\n    const [ingName, setIngName] = useState(\"\");\n    const [ingValue, setIngValue] = useState();\n    const [ingredients, setIngredients] = useState([]);\n    const [ingredientsValue, setIngredientsValue] = useState([]);\n    const [newRecipeModalIsOpen, setNewRecipeModalIsOpen] = React.useState(false);\n    const [recipeModalIsOpen, setRecipeModalIsOpen] = React.useState(false);\n\n    useEffect(() => {\n        setLoading(true);\n        fetch(`${API_URL}/recipes`)\n            .then((response) => response.json())\n            .then((data) => {\n                setRecipes(data);\n                setLoading(false);\n            });\n    }, []);\n    const deleteRecipe = (id) => {\n        setLoading(true);\n        fetch(`${API_URL}/recipes/${id}`, { method: 'DELETE' })\n            .then((response) => response.json())\n            .then(() => {\n                setRecipes((prevState) => prevState.filter((recipe) => recipe.id !== id));\n                setLoading(false);\n            });\n    };\n    const addNewRecipe = () => {\n        fetch(`${API_URL}/recipes`, {\n            method: 'POST',\n            body: JSON.stringify({\n                name,\n                recipe,\n                process,\n            }),\n            headers: {\n                'Content-type': 'application/json',\n            },\n        })\n            .then((resp) => resp.json())\n            .then((newRecipes) => {\n                setIngredients((preState)=>[...preState,ingName])\n                setIngredientsValue((preState)=>[...preState,ingValue])\n                setRecipes((prevState) => [...prevState, {name,recipe,process}]);\n            });\n    };\n\n\n    const recipe =  ingredientsValue.reduce(function(recipe, field, index) {\n        recipe[ingredients[index]] = field;\n        return recipe;\n    }, {})\n    console.log(recipes)\n    // console.log(ingValue)\n    const handleClickIng = (e) => {\n        e.preventDefault()\n        setIngredients((preState)=>[...preState,ingName])\n        setIngredientsValue((preState)=>[...preState,ingValue])\n        setIngValue(prevState => null)\n    }\n    function openNewModal() {\n        setNewRecipeModalIsOpen(true);\n    }\n    function closeNewModal(e) {\n        e.preventDefault()\n        addNewRecipe()\n        setIngredients((prevState) => [])\n        setIngredientsValue((prevState) => [])\n        setNewRecipeModalIsOpen(false);\n    }\n    function openModal(recipe) {\n        setOpenRecipe(recipe);\n        setRecipeModalIsOpen(true);\n    }\n    function closeModal(close) {\n        setRecipeModalIsOpen(false);\n    }\n    // console.log(recipes)\n\n    if (loading) return <p>Trwa ładowanie...</p>;\n    if (recipe.length === 0) return null;\n    return (\n        <>\n            <section className={\"container\"}>\n                <div className={\"recipe\"} onClick={openNewModal}>\n                    <h1>Add New</h1>\n                </div>\n                {recipes.map((recipe) => (\n                    <div key={recipe.id} className={\"recipe\"} onClick={ () => openModal(recipe)}>\n                        <h2>{recipe.name}</h2>\n                    </div>\n                ))}\n                <Modal\n                    isOpen={recipeModalIsOpen}\n                    onRequestClose={closeModal}\n                    ariaHideApp={false}\n                >\n                    <RecipeDetails recipe={openedRecipe} close={closeModal} deleteRecipe1={deleteRecipe} recipes={recipes}/>\n                </Modal>\n                <Modal\n                    isOpen={newRecipeModalIsOpen}\n                    onRequestClose={closeNewModal}\n                    ariaHideApp={false}\n                >\n                    <section className={\"container\"}>\n                        <form className={\"form\"} onSubmit={closeNewModal}>\n                            <input className={\"new-recipe-title\"} placeholder={'Drink Name'} onChange={e => setName(e.target.value)}/>\n                            <div className={'new-ing-div'}>\n                                <input className={\"new-recipe-title\"} placeholder={'ingredient 1'} onChange={e => setIngName(e.target.value)}/>\n                                <input type={'number'} className={\"new-recipe-title\"} placeholder={`quantity`} onChange={e => setIngValue(e.target.value)}/>\n                            </div>\n\n                            {ingredients.map((item,index)=>(\n                                <div key={index} className={'new-ing-div'}>\n                                    <input  className={\"new-recipe-title\"} placeholder={`ingredient ${index+2}`} onChange={e => setIngName(e.target.value)}/>\n                                    <input type={'number'} className={\"new-recipe-title\"} placeholder={\"quantity\"} onChange={e => setIngValue(e.target.value)}/>\n                                </div>\n                            ))}\n                            <textarea className={\"new-recipe-title\"} onChange={e => setProcess(e.target.value)}/>\n                            <button onClick={handleClickIng}>dodaj składnik</button>\n                            <button type={\"submit\"}>dodaj</button>\n\n                        </form>\n                    </section>\n                </Modal>\n            </section>\n        </>\n    );\n}\n\nexport { Recipe };\n\n// check on click for recipe to prevent refreshiing"]},"metadata":{},"sourceType":"module"}