{"ast":null,"code":"var _jsxFileName = \"/Users/blues/CodersLab/Projects/BoozeCounter/src/RecipeDetails.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst RecipeDetails = _ref => {\n  _s();\n\n  let {\n    recipe,\n    close,\n    deleteRecipe\n  } = _ref;\n  console.log(recipe.recipe);\n  const [currentSum, setCurrentSum] = useState(0);\n  const [clear, setClear] = useState(false);\n  const [ingValue, setIngValue] = useState();\n  const [ingValue2, setIngValue2] = useState();\n  useEffect(() => {\n    document.querySelector('#result').value = \"\";\n  }, []);\n  useEffect(() => {\n    if (clear) document.querySelector('#result').value = \"\";\n  });\n\n  const Add = e => {\n    e.preventDefault();\n    if (clear) setClear(false);\n    let currentNum = document.querySelector('#num').value;\n    if (currentNum === '') return;\n    let sum = currentSum + parseInt(currentNum);\n    setCurrentSum(sum);\n    document.querySelector('#num').value = \"\";\n  };\n\n  const Clear = e => {\n    e.preventDefault();\n    console.log('sum:', currentSum);\n    document.querySelector('form').reset();\n    setClear(true);\n    setCurrentSum(0);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-ing-div\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app-title\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: recipe.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"form\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: 'new-recipe-title',\n          type: \"text\",\n          id: \"num\",\n          placeholder: \"enter a number\",\n          onChange: e => setIngValue(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: 'new-recipe-title',\n          type: \"text\",\n          id: \"num\",\n          placeholder: \"enter a number\",\n          onChange: e => setIngValue2(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          onClick: Add,\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: Clear,\n          children: \"Clear\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"new-recipe-title\",\n          type: \"text\",\n          id: \"result\",\n          value: ingValue,\n          readOnly: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }, this)\n  }, void 0, false);\n};\n\n_s(RecipeDetails, \"kMypEo+Cfn+MaRlGUii4oSARsKI=\");\n\n_c = RecipeDetails;\nexport { RecipeDetails };\n\nvar _c;\n\n$RefreshReg$(_c, \"RecipeDetails\");","map":{"version":3,"sources":["/Users/blues/CodersLab/Projects/BoozeCounter/src/RecipeDetails.js"],"names":["React","useEffect","useState","RecipeDetails","recipe","close","deleteRecipe","console","log","currentSum","setCurrentSum","clear","setClear","ingValue","setIngValue","ingValue2","setIngValue2","document","querySelector","value","Add","e","preventDefault","currentNum","sum","parseInt","Clear","reset","name","target"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from \"react\";\n\n\n\n\n\nconst RecipeDetails = ({recipe, close, deleteRecipe}) => {\n    console.log(recipe.recipe)\n    const [currentSum,setCurrentSum]=useState(0);\n    const [clear,setClear]=useState(false);\n    const [ingValue, setIngValue] =useState()\n    const [ingValue2, setIngValue2] =useState()\n    useEffect(()=>{\n        document.querySelector('#result').value=\"\";\n    },[])\n\n    useEffect(()=>{\n        if(clear)\n            document.querySelector('#result').value=\"\";\n    })\n\n    const Add=(e)=>{\n        e.preventDefault();\n        if(clear) setClear(false);\n        let currentNum=document.querySelector('#num').value\n        if(currentNum === '')\n            return;\n        let sum= currentSum+parseInt(currentNum);\n        setCurrentSum(sum);\n        document.querySelector('#num').value=\"\";\n\n    }\n\n    const Clear=(e)=>{\n        e.preventDefault();\n        console.log('sum:', currentSum);\n        document.querySelector('form').reset();\n        setClear(true);\n        setCurrentSum(0);\n    }\n    return(\n      <>\n          <div className=\"new-ing-div\">\n              <div className=\"app-title\">\n                  <h1>{recipe.name}</h1>\n              </div>\n              <form className={\"form\"}>\n                  <input className={'new-recipe-title'} type=\"text\" id=\"num\" placeholder=\"enter a number\" onChange={e => setIngValue(e.target.value)} />\n                  <input className={'new-recipe-title'} type=\"text\" id=\"num\" placeholder=\"enter a number\" onChange={e => setIngValue2(e.target.value)} />\n\n                  <button className={\"button\"} onClick={Add}>Add</button>\n                  <button onClick={Clear}>Clear</button>\n                  <input className={\"new-recipe-title\"} type=\"text\" id=\"result\" value={ingValue}  readOnly />\n              </form>\n          </div>\n      </>\n    )\n}\n\nexport {RecipeDetails}"]},"metadata":{},"sourceType":"module"}