{"ast":null,"code":"var _jsxFileName = \"/Users/blues/Dyplom/my-app/src/Recipe.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { RecipeForm } from \"./RecipeForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst divStyle = {\n  width: 200,\n  height: 200,\n  backgroundColor: \"red\"\n};\n\nconst Recipe = () => {\n  _s();\n\n  const [recipes, setRecipe] = useState([]);\n  const [activeNewRecipe, setActiveNewRecipe] = useState(false);\n  const [activeRecipe, setActiveRecipe] = useState(false);\n  const [name, setName] = useState(\"\");\n  const [alc, setAlc] = useState(\"\");\n\n  const handleClick = e => {\n    e.preventDefault();\n    setActiveNewRecipe(prevState => !prevState);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setActiveNewRecipe(prevState => !prevState);\n    setRecipe(prevState => [...prevState, {\n      name,\n      alc\n    }]);\n  };\n\n  const handleClickRecipe = e => {\n    setActiveRecipe(prevState => !prevState);\n  };\n\n  if (activeNewRecipe === true) return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: name,\n      onChange: e => setName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: alc,\n      onChange: e => setAlc(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"dodaj\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);else if (activeRecipe === true) return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClick,\n      children: \"Close\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 21\n    }, this)\n  }, void 0, false);else return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: divStyle,\n      onClick: handleClick,\n      children: \"Dodaj Przepis!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }, this), recipes.map((recipe, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: 200,\n        height: 200,\n        backgroundColor: \"red\"\n      },\n      onClick: handleClickRecipe,\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: recipe.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 25\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 21\n    }, this))]\n  }, void 0, true);\n};\n\n_s(Recipe, \"NOhwZniVXz4p9/hwfZXIkWwfu08=\");\n\n_c = Recipe;\nexport { Recipe };\n\nvar _c;\n\n$RefreshReg$(_c, \"Recipe\");","map":{"version":3,"sources":["/Users/blues/Dyplom/my-app/src/Recipe.js"],"names":["React","useState","RecipeForm","divStyle","width","height","backgroundColor","Recipe","recipes","setRecipe","activeNewRecipe","setActiveNewRecipe","activeRecipe","setActiveRecipe","name","setName","alc","setAlc","handleClick","e","preventDefault","prevState","handleSubmit","handleClickRecipe","target","value","map","recipe","index"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport {RecipeForm} from \"./RecipeForm\";\n\nconst divStyle= {\n    width: 200,\n    height: 200,\n    backgroundColor: \"red\",\n}\nconst Recipe = () => {\n    const [recipes, setRecipe] = useState([]);\n    const [activeNewRecipe, setActiveNewRecipe] = useState(false);\n    const [activeRecipe, setActiveRecipe] = useState(false);\n    const [name, setName] = useState(\"\");\n    const [alc, setAlc] = useState(\"\");\n\n\n    const handleClick = (e) => {\n        e.preventDefault()\n        setActiveNewRecipe((prevState) => !prevState);\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        setActiveNewRecipe((prevState) => !prevState)\n        setRecipe((prevState)=>[...prevState,{name, alc}])\n    };\n    const handleClickRecipe = (e) => {\n        setActiveRecipe((prevState) => !prevState);\n\n    }\n    if (activeNewRecipe === true)\n        return(\n        <form onSubmit={handleSubmit}>\n            <input type=\"text\" value={name} onChange={e => setName(e.target.value)}/>\n            <input type=\"text\" value={alc} onChange={e => setAlc(e.target.value)}/>\n            <button type={\"submit\"}>dodaj</button>\n        </form>\n    )\n        else if (activeRecipe === true)\n            return (\n                <>\n                    <button onClick={handleClick}>Close</button>\n                </>\n            )\n    else\n    return (\n            <>\n                <div style={divStyle} onClick={handleClick}>Dodaj Przepis!</div>\n                {recipes.map((recipe, index) => (\n                    <div\n                        key={index}\n                        style={{\n                            width: 200,\n                            height: 200,\n                            backgroundColor: \"red\",\n                        }}\n                        onClick={handleClickRecipe}\n                    >\n                        <h1>{recipe.name}</h1>\n                    </div>\n                ))}\n            </>\n        );\n    }\n\nexport { Recipe };"]},"metadata":{},"sourceType":"module"}