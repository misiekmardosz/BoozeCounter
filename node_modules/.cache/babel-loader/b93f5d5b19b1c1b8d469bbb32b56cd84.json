{"ast":null,"code":"var _jsxFileName = \"/Users/blues/CodersLab/Projects/BoozeCounter/src/components/AddRecipe.js\";\nimport React from \"react\";\nimport { faSave, faAdd, faCancel } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { Ingredient } from \"../models/ingredient\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AddRecipe = _ref => {\n  let {\n    closeNewModal,\n    recipeBar,\n    cancelButton,\n    setName,\n    ingredients,\n    updateIngredientName,\n    updateIngredientValue,\n    handleAddIng,\n    setProcess\n  } = _ref;\n  if (recipeBar === false) return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"add--recipe\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"recipe--form\",\n        onSubmit: closeNewModal,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"add--recipe--name\",\n          placeholder: 'Drink Name',\n          onChange: e => setName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 25\n        }, this), ingredients.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: 'add--ing',\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"\",\n            placeholder: `ingredient ${index + 1}`,\n            onChange: e => updateIngredientName(index, e.target.value),\n            value: ingredients[index].name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: 'number',\n            className: \"\",\n            placeholder: \"quantity\",\n            onChange: e => updateIngredientValue(index, e.target.value),\n            value: ingredients[index].quantity\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 33\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 29\n        }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          onClick: handleAddIng,\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faAdd\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 77\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"add--process\",\n          placeholder: \"Type Process\",\n          onChange: e => setProcess(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          type: \"submit\",\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faSave\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 70\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 17\n    }, this)\n  }, void 0, false);else return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n\n_c = AddRecipe;\nexport { AddRecipe };\n\nvar _c;\n\n$RefreshReg$(_c, \"AddRecipe\");","map":{"version":3,"sources":["/Users/blues/CodersLab/Projects/BoozeCounter/src/components/AddRecipe.js"],"names":["React","faSave","faAdd","faCancel","FontAwesomeIcon","Ingredient","AddRecipe","closeNewModal","recipeBar","cancelButton","setName","ingredients","updateIngredientName","updateIngredientValue","handleAddIng","setProcess","e","target","value","map","item","index","name","quantity"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,MAAR,EAAgBC,KAAhB,EAAuBC,QAAvB,QAAsC,mCAAtC;AACA,SAAQC,eAAR,QAA8B,gCAA9B;AACA,SAAQC,UAAR,QAAyB,sBAAzB;;;;AAGA,MAAMC,SAAS,GAAG,QAOO;AAAA,MAPN;AACIC,IAAAA,aADJ;AACmBC,IAAAA,SADnB;AAEIC,IAAAA,YAFJ;AAGIC,IAAAA,OAHJ;AAGaC,IAAAA,WAHb;AAIIC,IAAAA,oBAJJ;AAKIC,IAAAA,qBALJ;AAMIC,IAAAA,YANJ;AAMkBC,IAAAA;AANlB,GAOM;AACrB,MAAIP,SAAS,KAAK,KAAlB,EACI,oBACI;AAAA,2BACI;AAAS,MAAA,SAAS,EAAE,aAApB;AAAA,6BACI;AAAM,QAAA,SAAS,EAAE,cAAjB;AAAiC,QAAA,QAAQ,EAAED,aAA3C;AAAA,gCACI;AAAO,UAAA,SAAS,EAAE,mBAAlB;AAAuC,UAAA,WAAW,EAAE,YAApD;AACO,UAAA,QAAQ,EAAES,CAAC,IAAIN,OAAO,CAACM,CAAC,CAACC,MAAF,CAASC,KAAV;AAD7B;AAAA;AAAA;AAAA;AAAA,gBADJ,EAGKP,WAAW,CAACQ,GAAZ,CAAgB,CAACC,IAAD,EAAOC,KAAP,kBACb;AAAiB,UAAA,SAAS,EAAE,UAA5B;AAAA,kCACI;AAAO,YAAA,SAAS,EAAE,EAAlB;AACO,YAAA,WAAW,EAAG,cAAaA,KAAK,GAAG,CAAE,EAD5C;AAEO,YAAA,QAAQ,EAAEL,CAAC,IAAIJ,oBAAoB,CAACS,KAAD,EAAQL,CAAC,CAACC,MAAF,CAASC,KAAjB,CAF1C;AAGO,YAAA,KAAK,EAAEP,WAAW,CAACU,KAAD,CAAX,CAAmBC;AAHjC;AAAA;AAAA;AAAA;AAAA,kBADJ,eAMI;AAAO,YAAA,IAAI,EAAE,QAAb;AAAuB,YAAA,SAAS,EAAE,EAAlC;AACO,YAAA,WAAW,EAAE,UADpB;AAEO,YAAA,QAAQ,EAAEN,CAAC,IAAIH,qBAAqB,CAACQ,KAAD,EAAQL,CAAC,CAACC,MAAF,CAASC,KAAjB,CAF3C;AAGO,YAAA,KAAK,EAAEP,WAAW,CAACU,KAAD,CAAX,CAAmBE;AAHjC;AAAA;AAAA;AAAA;AAAA,kBANJ;AAAA,WAAUF,KAAV;AAAA;AAAA;AAAA;AAAA,gBADH,CAHL,eAiBI;AAAQ,UAAA,SAAS,EAAE,QAAnB;AAA6B,UAAA,OAAO,EAAEP,YAAtC;AAAA,iCAAoD,QAAC,eAAD;AAAiB,YAAA,IAAI,EAAEZ;AAAvB;AAAA;AAAA;AAAA;AAAA;AAApD;AAAA;AAAA;AAAA;AAAA,gBAjBJ,eAkBI;AAAU,UAAA,SAAS,EAAE,cAArB;AAAqC,UAAA,WAAW,EAAE,cAAlD;AACU,UAAA,QAAQ,EAAEc,CAAC,IAAID,UAAU,CAACC,CAAC,CAACC,MAAF,CAASC,KAAV;AADnC;AAAA;AAAA;AAAA;AAAA,gBAlBJ,eAoBI;AAAQ,UAAA,SAAS,EAAE,QAAnB;AAA6B,UAAA,IAAI,EAAE,QAAnC;AAAA,iCAA6C,QAAC,eAAD;AAAiB,YAAA,IAAI,EAAEjB;AAAvB;AAAA;AAAA;AAAA;AAAA;AAA7C;AAAA;AAAA;AAAA;AAAA,gBApBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ,CADJ,KA8BK,oBAAO,qCAAP;AACR,CAvCD;;KAAMK,S;AAyCN,SAAQA,SAAR","sourcesContent":["import React from \"react\";\nimport {faSave, faAdd, faCancel} from \"@fortawesome/free-solid-svg-icons\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {Ingredient} from \"../models/ingredient\";\n\n\nconst AddRecipe = ({\n                       closeNewModal, recipeBar,\n                       cancelButton,\n                       setName, ingredients,\n                       updateIngredientName,\n                       updateIngredientValue,\n                       handleAddIng, setProcess\n                   }) => {\n    if (recipeBar === false)\n        return (\n            <>\n                <section className={\"add--recipe\"}>\n                    <form className={\"recipe--form\"} onSubmit={closeNewModal}>\n                        <input className={\"add--recipe--name\"} placeholder={'Drink Name'}\n                               onChange={e => setName(e.target.value)}/>\n                        {ingredients.map((item, index) => (\n                            <div key={index} className={'add--ing'}>\n                                <input className={\"\"}\n                                       placeholder={`ingredient ${index + 1}`}\n                                       onChange={e => updateIngredientName(index, e.target.value)}\n                                       value={ingredients[index].name}\n                                />\n                                <input type={'number'} className={\"\"}\n                                       placeholder={\"quantity\"}\n                                       onChange={e => updateIngredientValue(index, e.target.value)}\n                                       value={ingredients[index].quantity}\n                                />\n                            </div>\n                        ))}\n                        <button className={\"button\"} onClick={handleAddIng}><FontAwesomeIcon icon={faAdd}/></button>\n                        <textarea className={\"add--process\"} placeholder={\"Type Process\"}\n                                  onChange={e => setProcess(e.target.value)}/>\n                        <button className={\"button\"} type={\"submit\"}><FontAwesomeIcon icon={faSave}/></button>\n\n                    </form>\n                </section>\n            </>\n        )\n    else return <></>\n};\n\nexport {AddRecipe};"]},"metadata":{},"sourceType":"module"}