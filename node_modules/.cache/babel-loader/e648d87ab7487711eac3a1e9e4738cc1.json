{"ast":null,"code":"var _jsxFileName = \"/Users/blues/CodersLab/Projects/BoozeCounter/src/RecipeDetails.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Ingredient } from \"./models/ingredient\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst glassType = [{\n  name: \"shot glass\",\n  size: 40\n}, {\n  name: \"long glass\",\n  size: 310\n}];\n\nconst RecipeDetails = _ref => {\n  _s();\n\n  let {\n    recipe,\n    close,\n    deleteRecipe\n  } = _ref;\n  const [newQ, setNewQ] = useState([new Ingredient(\"\", \"\")]);\n  const [sumQ, setSumQ] = useState(0);\n  const sum = recipe.ingredients.reduce((total, amount) => total + amount.price, 0);\n  console.log(sum);\n\n  const handleDelete = () => {\n    deleteRecipe(recipe.id);\n    close();\n  }; // const updateSum = (newQuantity) =>{\n  //     newQuantity.map\n  // }\n\n\n  const updateIngValue = (index, newQuantity) => {\n    const ingredient = new Ingredient(\"\", \"\");\n    setNewQ(prevState => [...prevState, ingredient]);\n    const updatedIngredients = [...newQ];\n    updatedIngredients[index].quantity = newQuantity;\n    setNewQ(updatedIngredients);\n  }; // console.log(newQ)\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\" Prepare Your \", recipe.name, \"!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"How Many Drinks You want to do?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      onSubmit: close,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"set Value\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"What type of Glass You Have?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        children: glassType.map((glass, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          children: [glass.name, \" \", glass.size, \".ml\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"You Need\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), recipe.ingredients.map((ingredient, index) => /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: [ingredient.name, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleDelete,\n        children: \"Delete Recipe\"\n      }, recipe.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)]\n    }, recipe.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: recipe.process\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(RecipeDetails, \"cNuaH77RQbQyGcMZQm9yxCh2Cfw=\");\n\n_c = RecipeDetails;\nexport { RecipeDetails };\n\nvar _c;\n\n$RefreshReg$(_c, \"RecipeDetails\");","map":{"version":3,"sources":["/Users/blues/CodersLab/Projects/BoozeCounter/src/RecipeDetails.js"],"names":["React","useState","Ingredient","glassType","name","size","RecipeDetails","recipe","close","deleteRecipe","newQ","setNewQ","sumQ","setSumQ","sum","ingredients","reduce","total","amount","price","console","log","handleDelete","id","updateIngValue","index","newQuantity","ingredient","prevState","updatedIngredients","quantity","map","glass","process"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\nimport {Ingredient} from \"./models/ingredient\";\n\nconst glassType = [{\n        name: \"shot glass\",\n        size: 40,\n    },\n    {\n        name: \"long glass\",\n        size: 310\n    }\n]\n\n\n\nconst RecipeDetails = ({recipe, close, deleteRecipe}) => {\n\n    const [newQ, setNewQ] = useState([new Ingredient(\"\",\"\")])\n    const [sumQ, setSumQ] = useState(0)\n    const sum = recipe.ingredients.reduce((total, amount) => total + amount.price, 0);\n    console.log(sum)\n    const handleDelete =()=>{\n        deleteRecipe(recipe.id)\n        close()\n    }\n    // const updateSum = (newQuantity) =>{\n    //     newQuantity.map\n    // }\n    const updateIngValue = (index, newQuantity) =>{\n        const ingredient = new Ingredient(\"\", \"\");\n        setNewQ( prevState => [...prevState, ingredient]);\n        const updatedIngredients = [...newQ];\n        updatedIngredients[index].quantity= newQuantity;\n        setNewQ(updatedIngredients);\n    }\n    // console.log(newQ)\n\n    return(\n        <>\n            <h2> Prepare Your {recipe.name}!</h2>\n            <h3>How Many Drinks You want to do?</h3>\n\n            <form key={recipe.id} className={\"form\"} onSubmit={close}>\n                <input type=\"number\" placeholder='set Value'/>\n                <h3>What type of Glass You Have?</h3>\n                <select>\n                    {glassType.map((glass,index) => (\n                        <option>{glass.name} {glass.size}.ml</option>\n                    ))}\n                </select>\n                <h4>You Need</h4>\n                {recipe.ingredients.map((ingredient,index) => (\n                    <h5>{ingredient.name} </h5>\n                ))}\n                <button key={recipe.id} onClick={handleDelete}>Delete Recipe</button>\n            </form>\n            <p>{recipe.process}</p>\n        </>\n    )\n}\n\nexport {RecipeDetails}"]},"metadata":{},"sourceType":"module"}