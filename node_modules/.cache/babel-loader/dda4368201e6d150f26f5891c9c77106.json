{"ast":null,"code":"var _jsxFileName = \"/Users/blues/CodersLab/Projects/BoozeCounter/src/AddRecipe.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddRecipe = _ref => {\n  let {\n    closeNewModal,\n    cancelButton,\n    setName,\n    ingredients\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      onSubmit: closeNewModal,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"new-recipe-title\",\n        placeholder: 'Drink Name',\n        onChange: e => setName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 17\n      }, this), ingredients.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: 'new-ing-div',\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"new-recipe-ing\",\n          placeholder: `ingredient ${index + 1}`,\n          onChange: e => updateIngredientName(index, e.target.value),\n          value: ingredients[index].name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: 'number',\n          className: \"new-recipe-ing\",\n          placeholder: \"quantity\",\n          onChange: e => updateIngredientValue(index, e.target.value),\n          value: ingredients[index].quantity\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 25\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 21\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"ing--button\",\n        onClick: handleAddIng,\n        children: \"Add ingredient\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"new-recipe-textarea\",\n        placeholder: \"Type Process\",\n        onChange: e => setProcess(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        type: \"submit\",\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"cancel--btn\",\n        onClick: cancelButton,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 9\n  }, this);\n};\n\n_c = AddRecipe;\nexport { AddRecipe };\n\nvar _c;\n\n$RefreshReg$(_c, \"AddRecipe\");","map":{"version":3,"sources":["/Users/blues/CodersLab/Projects/BoozeCounter/src/AddRecipe.js"],"names":["React","AddRecipe","closeNewModal","cancelButton","setName","ingredients","e","target","value","map","item","index","updateIngredientName","name","updateIngredientValue","quantity","handleAddIng","setProcess"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAGA,MAAMC,SAAS,GAAE,QAAoD;AAAA,MAAnD;AAACC,IAAAA,aAAD;AAAeC,IAAAA,YAAf;AAA4BC,IAAAA,OAA5B;AAAoCC,IAAAA;AAApC,GAAmD;AACjE,sBACI;AAAS,IAAA,SAAS,EAAE,WAApB;AAAA,2BACI;AAAM,MAAA,SAAS,EAAE,MAAjB;AAAyB,MAAA,QAAQ,EAAEH,aAAnC;AAAA,8BACI;AAAO,QAAA,SAAS,EAAE,kBAAlB;AAAsC,QAAA,WAAW,EAAE,YAAnD;AAAiE,QAAA,QAAQ,EAAEI,CAAC,IAAIF,OAAO,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV;AAAvF;AAAA;AAAA;AAAA;AAAA,cADJ,EAEKH,WAAW,CAACI,GAAZ,CAAgB,CAACC,IAAD,EAAMC,KAAN,kBACb;AAAiB,QAAA,SAAS,EAAE,aAA5B;AAAA,gCACI;AAAQ,UAAA,SAAS,EAAE,gBAAnB;AACQ,UAAA,WAAW,EAAG,cAAaA,KAAK,GAAC,CAAE,EAD3C;AAEQ,UAAA,QAAQ,EAAEL,CAAC,IAAIM,oBAAoB,CAACD,KAAD,EAAOL,CAAC,CAACC,MAAF,CAASC,KAAhB,CAF3C;AAGQ,UAAA,KAAK,EAAEH,WAAW,CAACM,KAAD,CAAX,CAAmBE;AAHlC;AAAA;AAAA;AAAA;AAAA,gBADJ,eAMI;AAAO,UAAA,IAAI,EAAE,QAAb;AAAuB,UAAA,SAAS,EAAE,gBAAlC;AACO,UAAA,WAAW,EAAE,UADpB;AAEO,UAAA,QAAQ,EAAEP,CAAC,IAAIQ,qBAAqB,CAACH,KAAD,EAAOL,CAAC,CAACC,MAAF,CAASC,KAAhB,CAF3C;AAGO,UAAA,KAAK,EAAEH,WAAW,CAACM,KAAD,CAAX,CAAmBI;AAHjC;AAAA;AAAA;AAAA;AAAA,gBANJ;AAAA,SAAUJ,KAAV;AAAA;AAAA;AAAA;AAAA,cADH,CAFL,eAgBI;AAAQ,QAAA,SAAS,EAAE,aAAnB;AAAkC,QAAA,OAAO,EAAEK,YAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAhBJ,eAiBI;AAAU,QAAA,SAAS,EAAE,qBAArB;AAA4C,QAAA,WAAW,EAAE,cAAzD;AAAyE,QAAA,QAAQ,EAAEV,CAAC,IAAIW,UAAU,CAACX,CAAC,CAACC,MAAF,CAASC,KAAV;AAAlG;AAAA;AAAA;AAAA;AAAA,cAjBJ,eAkBI;AAAQ,QAAA,SAAS,EAAE,QAAnB;AAA6B,QAAA,IAAI,EAAE,QAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAlBJ,eAmBI;AAAQ,QAAA,SAAS,EAAE,aAAnB;AAAkC,QAAA,OAAO,EAAEL,YAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAnBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AA0BH,CA3BD;;KAAMF,S;AA6BN,SAAQA,SAAR","sourcesContent":["import React from \"react\";\n\n\nconst AddRecipe =({closeNewModal,cancelButton,setName,ingredients})=>{\n    return(\n        <section className={\"container\"}>\n            <form className={\"form\"} onSubmit={closeNewModal}>\n                <input className={\"new-recipe-title\"} placeholder={'Drink Name'} onChange={e => setName(e.target.value)}/>\n                {ingredients.map((item,index)=>(\n                    <div key={index} className={'new-ing-div'}>\n                        <input  className={\"new-recipe-ing\"}\n                                placeholder={`ingredient ${index+1}`}\n                                onChange={e => updateIngredientName(index,e.target.value)}\n                                value={ingredients[index].name}\n                        />\n                        <input type={'number'} className={\"new-recipe-ing\"}\n                               placeholder={\"quantity\"}\n                               onChange={e => updateIngredientValue(index,e.target.value)}\n                               value={ingredients[index].quantity}\n                        />\n                    </div>\n                ))}\n                <button className={\"ing--button\"} onClick={handleAddIng}>Add ingredient</button>\n                <textarea className={\"new-recipe-textarea\"} placeholder={\"Type Process\"} onChange={e => setProcess(e.target.value)}/>\n                <button className={\"button\"} type={\"submit\"}>Save</button>\n                <button className={\"cancel--btn\"} onClick={cancelButton}>Cancel</button>\n\n            </form>\n        </section>\n    )\n}\n\nexport {AddRecipe}"]},"metadata":{},"sourceType":"module"}