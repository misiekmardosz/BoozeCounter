{"ast":null,"code":"var _jsxFileName = \"/Users/blues/Dyplom/my-app/src/Recipe.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst divStyle = {\n  width: 200,\n  height: 200,\n  backgroundColor: \"red\"\n};\nconsole.log(recipes);\n\nconst Recipe = () => {\n  _s();\n\n  const [recipes, setRecipe] = useState([]);\n\n  const handleClick = () => {\n    const newRecipe = {\n      name: prompt(\"set name\")\n    };\n    setRecipe(prevRecipe => [...prevRecipe, newRecipe]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: divStyle,\n      onClick: handleClick,\n      children: \"Dodaj Boxa!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), recipes.map((recipe, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: 200,\n        height: 200,\n        backgroundColor: \"red\"\n      },\n      children: [\" \", recipes.name, \" \"]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true);\n};\n\n_s(Recipe, \"IVA3iO0mmnWtKCmnKN2lAIldseY=\");\n\n_c = Recipe;\nexport { Recipe };\n\nvar _c;\n\n$RefreshReg$(_c, \"Recipe\");","map":{"version":3,"sources":["/Users/blues/Dyplom/my-app/src/Recipe.js"],"names":["React","useState","divStyle","width","height","backgroundColor","console","log","recipes","Recipe","setRecipe","handleClick","newRecipe","name","prompt","prevRecipe","map","recipe","index"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAGA,MAAMC,QAAQ,GAAE;AACZC,EAAAA,KAAK,EAAE,GADK;AAEZC,EAAAA,MAAM,EAAE,GAFI;AAGZC,EAAAA,eAAe,EAAE;AAHL,CAAhB;AAKAC,OAAO,CAACC,GAAR,CAAYC,OAAZ;;AACA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACjB,QAAM,CAACD,OAAD,EAAUE,SAAV,IAAuBT,QAAQ,CAAC,EAAD,CAArC;;AAGA,QAAMU,WAAW,GAAG,MAAM;AACtB,UAAMC,SAAS,GAAG;AACdC,MAAAA,IAAI,EAAEC,MAAM,CAAC,UAAD;AADE,KAAlB;AAGAJ,IAAAA,SAAS,CAAEK,UAAD,IAAgB,CAAC,GAAGA,UAAJ,EAAgBH,SAAhB,CAAjB,CAAT;AACH,GALD;;AAOA,sBACI;AAAA,4BACI;AAAK,MAAA,KAAK,EAAEV,QAAZ;AAAsB,MAAA,OAAO,EAAES,WAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAEKH,OAAO,CAACQ,GAAR,CAAY,CAACC,MAAD,EAASC,KAAT,kBACT;AAEI,MAAA,KAAK,EAAE;AACHf,QAAAA,KAAK,EAAE,GADJ;AAEHC,QAAAA,MAAM,EAAE,GAFL;AAGHC,QAAAA,eAAe,EAAE;AAHd,OAFX;AAAA,sBAOGG,OAAO,CAACK,IAPX;AAAA,OACSK,KADT;AAAA;AAAA;AAAA;AAAA,YADH,CAFL;AAAA,kBADJ;AAeH,CA1BD;;GAAMT,M;;KAAAA,M;AA4BN,SAASA,MAAT","sourcesContent":["import React, { useState } from 'react';\n\n\nconst divStyle= {\n    width: 200,\n    height: 200,\n    backgroundColor: \"red\",\n}\nconsole.log(recipes)\nconst Recipe = () => {\n    const [recipes, setRecipe] = useState([]);\n\n\n    const handleClick = () => {\n        const newRecipe = {\n            name: prompt(\"set name\")\n        };\n        setRecipe((prevRecipe) => [...prevRecipe, newRecipe]);\n    };\n\n    return (\n        <>\n            <div style={divStyle} onClick={handleClick}>Dodaj Boxa!</div>\n            {recipes.map((recipe, index) => (\n                <div\n                    key={index}\n                    style={{\n                        width: 200,\n                        height: 200,\n                        backgroundColor: \"red\",\n                    }}\n                > {recipes.name} </div>\n            ))}\n        </>\n    );\n};\n\nexport { Recipe };"]},"metadata":{},"sourceType":"module"}