{"ast":null,"code":"var _jsxFileName = \"/Users/blues/Dyplom/my-app/src/Recipe.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { RecipeForm } from \"./RecipeForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst divStyle = {\n  width: 200,\n  height: 200,\n  backgroundColor: \"red\"\n};\n\nconst Recipe = () => {\n  _s();\n\n  const [recipes, setRecipe] = useState([{\n    name: newName\n  }]);\n  const [active, setActive] = useState(false);\n  const [name, setName] = useState(\"\");\n\n  const handleClick = e => {\n    e.preventDefault();\n    setActive(prevState => !prevState);\n  };\n\n  console.log(recipes);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setActive(prevState => !prevState);\n    setRecipe(prevState => [...prevState, {\n      newName\n    }]);\n  };\n\n  if (active === true) return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: newName,\n      onChange: e => setName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);else return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: divStyle,\n      onClick: handleClick,\n      children: \"Dodaj Boxa!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }, this), recipes.map((recipe, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: 200,\n        height: 200,\n        backgroundColor: \"red\"\n      },\n      children: [\" \", recipe, \" \"]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 21\n    }, this))]\n  }, void 0, true);\n};\n\n_s(Recipe, \"/zokoFIRBCwTuEBpNOwMDRd4sNA=\");\n\n_c = Recipe;\nexport { Recipe };\n\nvar _c;\n\n$RefreshReg$(_c, \"Recipe\");","map":{"version":3,"sources":["/Users/blues/Dyplom/my-app/src/Recipe.js"],"names":["React","useState","RecipeForm","divStyle","width","height","backgroundColor","Recipe","recipes","setRecipe","name","newName","active","setActive","setName","handleClick","e","preventDefault","prevState","console","log","handleSubmit","target","value","map","recipe","index"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAAQC,UAAR,QAAyB,cAAzB;;;AAEA,MAAMC,QAAQ,GAAE;AACZC,EAAAA,KAAK,EAAE,GADK;AAEZC,EAAAA,MAAM,EAAE,GAFI;AAGZC,EAAAA,eAAe,EAAE;AAHL,CAAhB;;AAKA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACjB,QAAM,CAACC,OAAD,EAAUC,SAAV,IAAuBR,QAAQ,CAAC,CAAC;AACnCS,IAAAA,IAAI,EAAEC;AAD6B,GAAD,CAAD,CAArC;AAGA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBZ,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAACS,IAAD,EAAOI,OAAP,IAAkBb,QAAQ,CAAC,EAAD,CAAhC;;AAGA,QAAMc,WAAW,GAAIC,CAAD,IAAO;AACvBA,IAAAA,CAAC,CAACC,cAAF;AACAJ,IAAAA,SAAS,CAAEK,SAAD,IAAe,CAACA,SAAjB,CAAT;AACH,GAHD;;AAIAC,EAAAA,OAAO,CAACC,GAAR,CAAYZ,OAAZ;;AACA,QAAMa,YAAY,GAAIL,CAAD,IAAO;AACxBA,IAAAA,CAAC,CAACC,cAAF;AACAJ,IAAAA,SAAS,CAAEK,SAAD,IAAe,CAACA,SAAjB,CAAT;AACAT,IAAAA,SAAS,CAAES,SAAD,IAAa,CAAC,GAAGA,SAAJ,EAAe;AAACP,MAAAA;AAAD,KAAf,CAAd,CAAT;AACH,GAJD;;AAKA,MAAIC,MAAM,KAAK,IAAf,EACI,oBACA;AAAM,IAAA,QAAQ,EAAES,YAAhB;AAAA,2BACI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,KAAK,EAAEV,OAA1B;AAAmC,MAAA,QAAQ,EAAEK,CAAC,IAAIF,OAAO,CAACE,CAAC,CAACM,MAAF,CAASC,KAAV;AAAzD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADA,CADJ,KAQA,oBACQ;AAAA,4BACI;AAAK,MAAA,KAAK,EAAEpB,QAAZ;AAAsB,MAAA,OAAO,EAAEY,WAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAEKP,OAAO,CAACgB,GAAR,CAAY,CAACC,MAAD,EAASC,KAAT,kBACT;AAEI,MAAA,KAAK,EAAE;AACHtB,QAAAA,KAAK,EAAE,GADJ;AAEHC,QAAAA,MAAM,EAAE,GAFL;AAGHC,QAAAA,eAAe,EAAE;AAHd,OAFX;AAAA,sBAOGmB,MAPH;AAAA,OACSC,KADT;AAAA;AAAA;AAAA;AAAA,YADH,CAFL;AAAA,kBADR;AAeC,CAzCL;;GAAMnB,M;;KAAAA,M;AA2CN,SAASA,MAAT","sourcesContent":["import React, { useState } from 'react';\nimport {RecipeForm} from \"./RecipeForm\";\n\nconst divStyle= {\n    width: 200,\n    height: 200,\n    backgroundColor: \"red\",\n}\nconst Recipe = () => {\n    const [recipes, setRecipe] = useState([{\n        name: newName\n    }]);\n    const [active, setActive] = useState(false);\n    const [name, setName] = useState(\"\");\n\n\n    const handleClick = (e) => {\n        e.preventDefault()\n        setActive((prevState) => !prevState);\n    }\n    console.log(recipes)\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        setActive((prevState) => !prevState)\n        setRecipe((prevState)=>[...prevState, {newName}])\n    };\n    if (active === true)\n        return(\n        <form onSubmit={handleSubmit}>\n            <input type=\"text\" value={newName} onChange={e => setName(e.target.value)}/>\n            {/*<input type=\"text\" value={name} onChange={e => setName(e.target.value)}/>*/}\n        </form>\n    )\n    else\n    return (\n            <>\n                <div style={divStyle} onClick={handleClick}>Dodaj Boxa!</div>\n                {recipes.map((recipe, index) => (\n                    <div\n                        key={index}\n                        style={{\n                            width: 200,\n                            height: 200,\n                            backgroundColor: \"red\",\n                        }}\n                    > {recipe} </div>\n                ))}\n            </>\n        );\n    }\n\nexport { Recipe };"]},"metadata":{},"sourceType":"module"}